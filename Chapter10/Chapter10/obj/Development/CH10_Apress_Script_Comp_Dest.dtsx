<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/22/2011 8:10:35 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SQL11"
  DTS:CreatorName="SQL11\Admin"
  DTS:DTSID="{32100320-3359-471E-8041-16059AE9DBAE}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="11"
  DTS:ObjectName="CH10_Apress_Script_Comp_Dest"
  DTS:PackageType="5"
  DTS:VersionBuild="111"
  DTS:VersionGUID="{DF540149-4C7D-4E90-B571-718126262E03}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[KeywordOutputHtml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{31D9EEE6-8D66-43C5-A8F6-30C79CDB13FA}"
      DTS:ObjectName="KeywordOutputHtml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\SampleData\KeywordOutput.html" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RssFeedOutputHtml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{F97F899D-4AA8-424E-B024-D514E9AA3B1F}"
      DTS:ObjectName="RssFeedOutputHtml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\SampleData\RssFeedOutput.html" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DFT - RSS Feed"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{EBF6EB8A-C624-4104-8BA0-A0AB7D8F11C7}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="11"
      DTS:ObjectName="DFT - RSS Feed"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{A416E0F1-5EF6-44D0-8484-D5F82708BB9D}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="RowCount">
          <DTS:VariableValue
            DTS:DataType="3">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{C69F77BC-309F-4A98-93C0-11C3298DB60A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="RowCount2">
          <DTS:VariableValue
            DTS:DataType="3">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - RSS Feed\SCR - Feed HTML"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Feed HTML"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Microsoft.SqlServer.Dts.Pipeline;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Text;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string filename;
    TextWriter outputfile;
    bool headerout = false;

    public override void PreExecute()
    {
        base.PreExecute();
        outputfile = new StreamWriter(filename, false);
    }

    public override void PostExecute()
    {
        base.PostExecute();
        outputfile.Write("</table></body></html>");
        outputfile.Flush();
        outputfile.Dispose();
    }

    public override void AcquireConnections(object Transaction)
    {
        base.AcquireConnections(Transaction);
        IDTSConnectionManager100 connmanager = this.Connections.FileConnection;
        filename = (string)connmanager.AcquireConnection(null);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {
        if (!headerout)
        {
            outputfile.Write("<html>\n<body>\n<table border=\"1\">\n<tr>");
            foreach (IDTSInputColumn100 column in this.ComponentMetaData.InputCollection[0].InputColumnCollection)
            {
                outputfile.Write("<td>{0}</td>", column.Name);
            }
            outputfile.Write("</tr>");
            headerout = true;
        }
        while (Buffer.NextRow())
        {
            outputfile.Write("<tr>");
            for (int i = 0; i < Buffer.ColumnCount; i++)
            {
                outputfile.Write(string.Format("<td>{0}</td>", Buffer[i].ToString()));
            }
            outputfile.Write("</tr>");
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FeedTitle
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FeedTitle_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FeedLink
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FeedLink_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String FeedLanguage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool FeedLanguage_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String FeedPubDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool FeedPubDate_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Title
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Title_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String Link
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool Link_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String Description
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool Description_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 RowNumber
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool RowNumber_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 FileConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"FileConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3465a714708547708dffa254e146a48c.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_3465a714708547708dffa254e146a48c.csproj")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_3465a714708547708dffa254e146a48c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_3465a714708547708dffa254e146a48c.csproj</RootNamespace>
    <AssemblyName>SC_3465a714708547708dffa254e146a48c.csproj</AssemblyName>
    <ProjectGuid>{577B28F0-B857-438F-B0C0-9CF2E653F16C}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{DA7E9EB7-CDD5-4D53-90F1-DAEE99BF9E16}</msb:ProjectId>
		<msb:DisplayName>sc_3465a714708547708dffa254e146a48c</msb:DisplayName>
		<msb:CodeName>sc_3465a714708547708dffa254e146a48c</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_3465a714708547708dffa254e146a48c.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Settings.get_Default():SC_3465a714708547708dffa254e146a48c.csproj.Properties.Sett" +
    "ings")]

namespace SC_3465a714708547708dffa254e146a48c.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3465a714708547708dffa254e146a48c.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_3465a714708547708dffa254e146a48c.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACWoKVAAAAAAAAAAAOAAAiELAQgAAB4AAAAIAAAAAAAATjwA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPw7AABPAAAAAEAAAJAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVBwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJAEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
PAAAAAAAAEgAAAACAAUAqCQAAFQXAAABAAAAAAAAAPAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxAAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxAAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxAAAAoqIgIZKBEAAAoqUgJ7DgAACgJ7DwAAChqUbxAA
AAoqIgIaKBEAAAoqUgJ7DgAACgJ7DwAAChuUbxAAAAoqIgIbKBEAAAoqUgJ7DgAACgJ7DwAAChyU
bxAAAAoqIgIcKBEAAAoqUgJ7DgAACgJ7DwAACh2UbxIAAAoqIgIdKBEAAAoqHgIoEwAACioeAigU
AAAKKn4CKBUAAAoCAnMYAAAGfQEAAAQCAnMaAAAGfQIAAAQqkgRyAQAAcBpvFgAACiwVAgUCAygX
AAAKDgRzAQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKBgAAAoCA30DAAAEKoICewMA
AARvGQAACm8aAAAKchEAAHBvGwAACm8cAAAKKjoCKBgAAAoCA30EAAAEKmYCKB4AAAoCAnsFAAAE
FnMfAAAKfQYAAAQqtgIoIAAACgJ7BgAABHIvAABwbyEAAAoCewYAAARvIgAACgJ7BgAABG8jAAAK
KhMwAwAmAAAAAQAAEQIDKCQAAAoCewEAAARvGQAABgoCBhRvJQAACnQXAAABfQUAAAQqAAAbMAQA
7wAAAAIAABECewcAAAQ62wAAAAJ7BgAABHJdAABwbyEAAAoCKBkAAApvJgAAChaMHwAAAW8nAAAK
bygAAApvKQAACgwrIghvKgAACnQjAAABCgJ7BgAABHKpAABwBm8rAAAKbywAAAoIby0AAAot1t4R
CHUkAAABDQksBglvLgAACtwCewYAAARywwAAcG8hAAAKAhd9BwAABCtSAnsGAAAEcs8AAHBvIQAA
ChYLKyUCewYAAARyqQAAcAUHby8AAApvMAAACigxAAAKbyEAAAoHF1gLBwVvMgAACjLSAnsGAAAE
csMAAHBvIQAACgVvMwAACi2mKgABEAAAAgA8AC5qABEAAAAAHgIoFAAABioeAigYAAAKKhMwAwAt
AAAAAwAAEX4IAAAELSBy2QAAcNAHAAACKDUAAApvNgAACnM3AAAKCgaACAAABH4IAAAEKhp+CQAA
BCoeAoAJAAAEKhp+CgAABCoucyUAAAaACgAABCoeAig6AAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA5AcAACN+AABQCAAAYAsAACNTdHJpbmdzAAAA
ALATAABcAQAAI1VTAAwVAAAQAAAAI0dVSUQAAAAcFQAAOAIAACNCbG9iAAAAAAAAAAIAAAFXFaIB
CQEAAAD6JTMAFgAAAQAAACsAAAAIAAAACgAAACYAAAARAAAAOgAAAA8AAAADAAAABAAAABQAAAAV
AAAAAQAAAAYAAAABAAAAAAAKAAEAAAAAAAYA/ADbAAYACQHbAAoAKQEiAQ4ARQEwARIAfgHbAAYA
jQHbABYALAQEBAoAegRwBAoA1QTEBAoABgXxBAoA6wXRBQoAFgYEBgoALQYEBgoASgYEBgoAaQYE
BgoAggYEBgoAmwYEBgoAtgYEBgoA0QYEBgoA6gYEBgoAIwcDBwoAQwcDBwoApgciAQoArQciARoA
Iwj6BxoAUgj6BxoAlQj6BwYA3wjbAAoABglwBBoAOQn6BwoAZAkiARoAagn6BxoAgAn6BwoAygm3
CRoA8An6BwoAFQoiAQoAVApBCgoAcQoiAQoAdgoiAQoAmgoEBg4AxgqwCg4A3wqwCgoA9AoDBwAA
AAABAAAAAAABAAEAAQAQADkAAAAFAAEAAQABABAARgAAAAkAAQAUAAEAEABUAAAADQADABgAAQAQ
AGAAAAANAAQAGgABABAAagAAAAwABQAbAAAAEAB1AH8ADQAIACAAAAEQALUAfwARAAoAJAAGAFQA
NQAGAGAAOQABANEDUQABANEDUQABAGcEZQABAIUEaAABAJAEbAARAOUEdAARABIFeAARAFYFlgBQ
IAAAAACGGJsBEwABAFsgAAAAAIYIoQEdAAQAcCAAAAAAhgivASEABAB5IAAAAACGCMQBHQAEAI4g
AAAAAIYI0QEhAAQAlyAAAAAAhgjlAR0ABACsIAAAAACGCPYBIQAEALUgAAAAAIYIDgIdAAQAyiAA
AAAAhggeAiEABADTIAAAAACGCDUCHQAEAOggAAAAAIYIPwIhAAQA8SAAAAAAhghQAh0ABAAGIQAA
AACGCFkCIQAEAA8hAAAAAIYIaQIdAAQAJCEAAAAAhgh5AiEABAAtIQAAAACGCJACJQAEAEIhAAAA
AIYIngIhAAQASyEAAAAAhgCzAiEABABTIQAAAACGALsCIQAEAFshAAAAAIYYmwE9AAQAeyEAAAAA
xgCZA0EABACgIQAAAADGAaYDSwAIALMhAAAAAMYBugNLAAkAtSEAAAAAhhibAVUACgDEIQAAAACG
CEUEWwALAOUhAAAAAIYYmwFVAAsA9CEAAAAAxgCaBD0ADAAOIgAAAADGAKUEPQAMADwiAAAAAMYA
sQRvAAwAcCIAAAAAxgCZA0EADQB8IwAAAACGGJsBPQARAIQjAAAAAIMYmwE9ABEAjCMAAAAAkwgi
BXwAEQDFIwAAAACTCDYFgQARAMwjAAAAAJMIQgWGABEA1CMAAAAAlghmBZoAEgDnIwAAAACGGJsB
PQASANsjAAAAAJEYDwtdARIAAAABAHoFAAACAIEFAAADAJUFAAABAJ8FAAACAKcFAAADAHoFAAAE
AJUFAAABAHoFAAABALEFAAABALUFAAABALUFAAABAL8FAAABAJ8FAAACAKcFAAADAHoFAAAEAJUF
AAABAMsFWQCbAaQAYQCbAaQAaQCbAaQAcQCbAaQAeQCbAaQAgQCbAaQAiQCbAaQAkQCbAaQAmQCb
AaQAoQCbAaQAqQCbAakAsQCbAT0ACQCbARMACQB6Ba4ACQCBBbIAKQCMB7YACQCWB7sAKQCdB8AA
CQCzAiEACQC7AiEAEQCbAT0AuQC+B8UAEQDFB8wAGQCbAT0AEQA8CNIAyQB1CNcA0QCuCNwA2QDJ
CFsA4QCbAT0AEQCaBD0A6QCbAecAEQClBD0AQQATCaQAQQAZCT0AQQAfCT0AEQCxBG8AOQAnCe0A
yQBQCfcA8QB3CfwAAQGdCQMBCQHWCQkBEQHkCQ8BGQEDCh0AQQATCRMBEQEMCiEAIQEfCT0AKQB3
CRkBGQAhCh0AuQAqCh4BKQAxCiUAKQCzAiEAKQGbAT0AMQGICjEBMQGjCjoBSQCbAUABSQGbAU0B
WQGbAT0AIQCbAT0ALgAbANkBLgBjABcCLgALAGEBLgATAKkBLgAjANkBLgArAN8BLgAzAKkBLgA7
AO4BLgBDANkBLgBbAA4CwwDrAOIA4wCjAeIAQQHLAeIASQLDAVQBaQLDAVQB8gAkAUgBAgABAAQA
EQAHABIACAAUAAAAxwIpAAAA0QItAAAA4gIpAAAA6wItAAAA+wIpAAAACAMtAAAAHAMpAAAAKAMt
AAAAOwMpAAAAQQMtAAAATgMpAAAAUwMtAAAAXwMpAAAAawMtAAAAfgMxAAAAiAMtAAAAWARgAAAA
1QSMAAAATgWRAAAAcgWfAAIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIACAAP
AAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAdAAIAEAAfAAIAEQAhAAIA
GQAjAAIAIQAlAAIAIgAnAAEAIwAnAAIAJAApAASAAAABAAAAABIqjwAAAAAAAGEHAAALAAAAAAAA
AAAAAAABAL4AAAAAAAQAAAAAAAAAAAAAAAoAGQEAAAAABAAAAAAAAAAAAAAACgAiAQAAAAALAAAA
AAAAAAAAAAABAF0BAAAAAAsAAAAAAAAAAAAAAAEA4QMAAAAACwAAAAAAAAAAAAAAAQDWBwAAAAAA
AAAAAQAAABYLAAAAAAA8TW9kdWxlPgBTQ18zNDY1YTcxNDcwODU0NzcwOGRmZmEyNTRlMTQ2YTQ4
Yy5jc3Byb2ouZGxsAElucHV0MEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlh
YmxlcwBTY3JpcHRNYWluAFJlc291cmNlcwBTQ18zNDY1YTcxNDcwODU0NzcwOGRmZmEyNTRlMTQ2
YTQ4Yy5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRD
b21wb25lbnQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBl
bGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAC5jdG9yAGdldF9GZWVkVGl0bGUAZ2V0X0ZlZWRUaXRs
ZV9Jc051bGwAZ2V0X0ZlZWRMaW5rAGdldF9GZWVkTGlua19Jc051bGwAZ2V0X0ZlZWRMYW5ndWFn
ZQBnZXRfRmVlZExhbmd1YWdlX0lzTnVsbABnZXRfRmVlZFB1YkRhdGUAZ2V0X0ZlZWRQdWJEYXRl
X0lzTnVsbABnZXRfVGl0bGUAZ2V0X1RpdGxlX0lzTnVsbABnZXRfTGluawBnZXRfTGlua19Jc051
bGwAZ2V0X0Rlc2NyaXB0aW9uAGdldF9EZXNjcmlwdGlvbl9Jc051bGwAZ2V0X1Jvd051bWJlcgBn
ZXRfUm93TnVtYmVyX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AEZlZWRUaXRsZQBGZWVkVGl0
bGVfSXNOdWxsAEZlZWRMaW5rAEZlZWRMaW5rX0lzTnVsbABGZWVkTGFuZ3VhZ2UARmVlZExhbmd1
YWdlX0lzTnVsbABGZWVkUHViRGF0ZQBGZWVkUHViRGF0ZV9Jc051bGwAVGl0bGUAVGl0bGVfSXNO
dWxsAExpbmsATGlua19Jc051bGwARGVzY3JpcHRpb24ARGVzY3JpcHRpb25fSXNOdWxsAFJvd051
bWJlcgBSb3dOdW1iZXJfSXNOdWxsAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElu
cHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAElE
VFNDb25uZWN0aW9uTWFuYWdlcjEwMABnZXRfRmlsZUNvbm5lY3Rpb24ARmlsZUNvbm5lY3Rpb24A
ZmlsZW5hbWUAU3lzdGVtLklPAFRleHRXcml0ZXIAb3V0cHV0ZmlsZQBoZWFkZXJvdXQAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQBBY3F1aXJlQ29ubmVjdGlvbnMAU3lzdGVtLlJlc291cmNlcwBSZXNv
dXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8A
cmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVm
ZmVyQ29sdW1uSW5kZXhlcwBPdXRwdXRNYXAASW5wdXRJRABJbnB1dE5hbWUAUm93AENvbXBvbmVu
dABUcmFuc2FjdGlvbgB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
dWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfMzQ2NWE3MTQ3MDg1NDc3MDhkZmZhMjU0ZTE0NmE0OGMu
Y3Nwcm9qAEdldFN0cmluZwBJc051bGwAR2V0SW50MzIAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24A
RXF1YWxzAEdldENvbHVtbkluZGV4ZXMATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdy
YXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50
TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAElEVFNSdW50aW1lQ29ubmVjdGlvbkNv
bGxlY3Rpb24xMDAAZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBJRFRTUnVudGltZUNv
bm5lY3Rpb24xMDAAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAZ2V0X0Nvbm5lY3Rpb25NYW5h
Z2VyAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFN0cmVhbVdyaXRlcgBX
cml0ZQBGbHVzaABEaXNwb3NlAEFjcXVpcmVDb25uZWN0aW9uAElEVFNJbnB1dENvbGxlY3Rpb24x
MDAAZ2V0X0lucHV0Q29sbGVjdGlvbgBJbnQzMgBJRFRTSW5wdXQxMDAAZ2V0X0l0ZW0ASURUU0lu
cHV0Q29sdW1uQ29sbGVjdGlvbjEwMABnZXRfSW5wdXRDb2x1bW5Db2xsZWN0aW9uAFN5c3RlbS5D
b2xsZWN0aW9ucwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AElEVFNJbnB1
dENvbHVtbjEwMABnZXRfTmFtZQBNb3ZlTmV4dABJRGlzcG9zYWJsZQBUb1N0cmluZwBGb3JtYXQA
Z2V0X0NvbHVtbkNvdW50AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkA
Z2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9y
AFNDXzM0NjVhNzE0NzA4NTQ3NzA4ZGZmYTI1NGUxNDZhNDhjLmNzcHJvai5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAAdRgBpAGwAZQBDAG8AbgBuAGUAYwB0
AGkAbwBuAAAtPAAvAHQAYQBiAGwAZQA+ADwALwBiAG8AZAB5AD4APAAvAGgAdABtAGwAPgAASzwA
aAB0AG0AbAA+AAoAPABiAG8AZAB5AD4ACgA8AHQAYQBiAGwAZQAgAGIAbwByAGQAZQByAD0AIgAx
ACIAPgAKADwAdAByAD4AABk8AHQAZAA+AHsAMAB9ADwALwB0AGQAPgAACzwALwB0AHIAPgAACTwA
dAByAD4AAH9TAEMAXwAzADQANgA1AGEANwAxADQANwAwADgANQA0ADcANwAwADgAZABmAGYAYQAy
ADUANABlADEANAA2AGEANAA4AGMALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAVFJObqspn06HJjHaedODzwAIiYRdzYCAzJEIt3pcVhk0
4IkJIAMBEhUdCBIZAyAADgMgAAIDIAAIAygADgMoAAIDKAAIAwYSEAMGEhQDIAABCSAEAQgOEhUS
GQUgAQESCAMGEgkFIAEBEgkEIAASHQQoABIdAgYOAwYSIQIGAgQgAQEcAwYSJQMGEikEAAASJQQA
ABIpBQABARIpBAgAEiUECAASKQMGEiAEAAASIAQIABIgBCABAQ4EIAEBCAMGEhUDBh0IBCABDggE
IAECCAQgAQgIBiACAg4RYQUgAR0ICAQgABJlBCAAEmkFIAESbQ4EAQAAAAUgAgEOAgQgARwcBAcB
Eh0EIAASeQYgARKAgRwFIAASgIUFIAASgIkDIAAcBSACAQ4cBCABHAgFAAIODhwMBwQSgI0IEoCJ
EoCRCAABEoCZEYCdBSAAEoChByACAQ4SgKEEBwESJQYgAQERgKkIAQACAAAAAAADAAABRwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0LwEAKlNDXzM0NjVhNzE0NzA4NTQ3NzA4ZGZmYTI1NGUxNDZhNDhjLmNzcHJvagAA
BQEAAAAADgEACU1pY3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDExAAAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAkPAAAAAAAAAAAAAA+PAAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAMDwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACqPABIAAAEAKo8AEj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAAMAA0
AGIAMAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQA
AACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMwA0ADYANQBh
ADcAMQA0ADcAMAA4ADUANAA3ADcAMAA4AGQAZgBmAGEAMgA1ADQAZQAxADQANgBhADQAOABjAC4A
YwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA0
ADYAMAA4AC4AMwA2ADYANQAwAAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
QwBfADMANAA2ADUAYQA3ADEANAA3ADAAOAA1ADQANwA3ADAAOABkAGYAZgBhADIANQA0AGUAMQA0
ADYAYQA0ADgAYwAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAFwAGwABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8AZgB0
ACAAMgAwADEAMQAAAAAAiAAvAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
QwBfADMANAA2ADUAYQA3ADEANAA3ADAAOAA1ADQANwA3ADAAOABkAGYAZgBhADIANQA0AGUAMQA0
ADYAYQA0ADgAYwAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8AMwA0ADYANQBhADcAMQA0ADcAMAA4ADUANAA3ADcAMAA4AGQAZgBm
AGEAMgA1ADQAZQAxADQANgBhADQAOABjAC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANAA2ADAAOAAuADMANgA2ADUAMAAAAAAASAAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANAA2ADAAOAAuADMA
NgA2ADUAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_3465a714708547708dffa254e146a48c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">08741ef8dce3e0bfb5aafd29f6f7e58b</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - RSS Feed\SCR - Feed HTML.Connections[FileConnection]"
                  connectionManagerID="Package.ConnectionManagers[RssFeedOutputHtml]"
                  connectionManagerRefId="Package.ConnectionManagers[RssFeedOutputHtml]"
                  name="FileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[FeedTitle]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedTitle"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedTitle]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[FeedLink]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedLink"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedLink]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[FeedLanguage]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedLanguage"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedLanguage]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[FeedPubDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedPubDate"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedPubDate]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[Title]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="Title"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Title]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[Link]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="Link"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Link]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[Description]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2000"
                      cachedName="Description"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Description]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0].Columns[RowNumber]"
                      cachedDataType="i4"
                      cachedName="RowNumber"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[RowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\DFT - RSS Feed\SCR - Feed HTML 2"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Feed HTML 2"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Microsoft.SqlServer.Dts.Pipeline;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Text;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string filename;
    TextWriter outputfile;
    bool headerout = false;

    public override void PreExecute()
    {
        base.PreExecute();
        outputfile = new StreamWriter(filename, false);
    }

    public override void PostExecute()
    {
        base.PostExecute();
        outputfile.Write("</table></body></html>");
        outputfile.Flush();
        outputfile.Dispose();
    }

    public override void AcquireConnections(object Transaction)
    {
        base.AcquireConnections(Transaction);
        IDTSConnectionManager100 connmanager = this.Connections.FileConnection;
        filename = (string)connmanager.AcquireConnection(null);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {
        if (!headerout)
        {
            outputfile.Write("<html>\n<body>\n<table border=\"1\">\n<tr>");
            foreach (IDTSInputColumn100 column in this.ComponentMetaData.InputCollection[0].InputColumnCollection)
            {
                outputfile.Write("<td>{0}</td>", column.Name);
            }
            outputfile.Write("</tr>");
            headerout = true;
        }
        while (Buffer.NextRow())
        {
            outputfile.Write("<tr>");
            for (int i = 0; i < Buffer.ColumnCount; i++)
            {
                outputfile.Write(string.Format("<td>{0}</td>", Buffer[i].ToString()));
            }
            outputfile.Write("</tr>");
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowNumber
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool RowNumber_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 KeyWordNumber
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool KeyWordNumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String KeyWord
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool KeyWord_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 Occurrences
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool Occurrences_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 FileConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"FileConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3465a714708547708dffa254e146a48c.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_3465a714708547708dffa254e146a48c.csproj")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_3465a714708547708dffa254e146a48c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_3465a714708547708dffa254e146a48c.csproj</RootNamespace>
    <AssemblyName>SC_F8ECE4D1C2814E8CBAD7F8B8A65DFEEB</AssemblyName>
    <ProjectGuid>{577B28F0-B857-438F-B0C0-9CF2E653F16C}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{0FEAA1AE-053D-4553-88A2-14DF1400C84B}</msb:ProjectId>
		<msb:DisplayName>sc_3465a714708547708dffa254e146a48c</msb:DisplayName>
		<msb:CodeName>sc_3465a714708547708dffa254e146a48c</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_3465a714708547708dffa254e146a48c.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Settings.get_Default():SC_3465a714708547708dffa254e146a48c.csproj.Properties.Sett" +
    "ings")]

namespace SC_3465a714708547708dffa254e146a48c.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3465a714708547708dffa254e146a48c.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3465a714708547708dffa254e146a48c.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_F8ECE4D1C2814E8CBAD7F8B8A65DFEEB.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADWoKVAAAAAAAAAAAOAAAiELAQgAABwAAAAIAAAAAAAAHjoA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMw5AABPAAAAAEAAAHAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
OgAAAAAAAEgAAAACAAUAMCQAAJwVAAABAAAAAAAAAHgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxAAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxIAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxAAAAoqIgIZKBEAAAoqHgIoEwAACioeAigUAAAKKn4C
KBUAAAoCAnMQAAAGfQEAAAQCAnMSAAAGfQIAAAQqkgRyAQAAcBpvFgAACiwVAgUCAygXAAAKDgRz
AQAABm8OAAAGKkorBwIDbw8AAAYDbwoAAAYt8SoGKjoCKBgAAAoCA30DAAAEKoICewMAAARvGQAA
Cm8aAAAKchEAAHBvGwAACm8cAAAKKjoCKBgAAAoCA30EAAAEKmYCKB4AAAoCAnsFAAAEFnMfAAAK
fQYAAAQqtgIoIAAACgJ7BgAABHIvAABwbyEAAAoCewYAAARvIgAACgJ7BgAABG8jAAAKKhMwAwAm
AAAAAQAAEQIDKCQAAAoCewEAAARvEQAABgoCBhRvJQAACnQXAAABfQUAAAQqAAAbMAQA7wAAAAIA
ABECewcAAAQ62wAAAAJ7BgAABHJdAABwbyEAAAoCKBkAAApvJgAAChaMHwAAAW8nAAAKbygAAApv
KQAACgwrIghvKgAACnQjAAABCgJ7BgAABHKpAABwBm8rAAAKbywAAAoIby0AAAot1t4RCHUkAAAB
DQksBglvLgAACtwCewYAAARywwAAcG8hAAAKAhd9BwAABCtSAnsGAAAEcs8AAHBvIQAAChYLKyUC
ewYAAARyqQAAcAUHby8AAApvMAAACigxAAAKbyEAAAoHF1gLBwVvMgAACjLSAnsGAAAEcsMAAHBv
IQAACgVvMwAACi2mKgABEAAAAgA8AC5qABEAAAAAHgIoDAAABioeAigYAAAKKhMwAwAtAAAAAwAA
EX4IAAAELSBy2QAAcNAHAAACKDUAAApvNgAACnM3AAAKCgaACAAABH4IAAAEKhp+CQAABCoeAoAJ
AAAEKhp+CgAABCoucx0AAAaACgAABCoeAig6AAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAFAcAACN+AACABwAAeAoAACNTdHJpbmdzAAAAAPgRAABc
AQAAI1VTAFQTAAAQAAAAI0dVSUQAAABkEwAAOAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6
JTMAFgAAAQAAACsAAAAIAAAACgAAAB4AAAARAAAAOgAAAA8AAAADAAAABAAAAAwAAAANAAAAAQAA
AAYAAAABAAAAAAAKAAEAAAAAAAYA9QDUAAYAAgHUAAoAIgEbAQ4APgEpARIAdwHUAAYAhgHUABYA
SQMhAwoAlwONAwoA8gPhAwoAIwQOBAoACAXuBAoAMwUhBQoASgUhBQoAZwUhBQoAhgUhBQoAnwUh
BQoAuAUhBQoA0wUhBQoA7gUhBQoABwYhBQoAQAYgBgoAYAYgBgoAvAYbAQoAwwYbARoAOQcQBxoA
aAcQBxoAqwcQBwYA9QfUAAoAHAiNAxoATwgQBwoAeggbARoAgAgQBxoAlggQBwoA4AjNCBoABgkQ
BwoAKwkbAQoAaglXCQoAhwkbAQoAjAkbAQoAsAkhBQ4A3AnGCQ4A9QnGCQoACgogBgAAAAABAAAA
AAABAAEAAQAQADIAAAAFAAEAAQABABAAPwAAAAkAAQAMAAEAEABNAAAADQADABAAAQAQAFkAAAAN
AAQAEgABABAAYwAAAAwABQATAAAAEABuAHgADQAIABgAAAEQAK4AeAARAAoAHAAGAE0ANQAGAFkA
OQABAO4CUQABAO4CUQABAIQDZQABAKIDaAABAK0DbAARAAIEdAARAC8EeAARAHMElgBQIAAAAACG
GJQBEwABAFsgAAAAAIYImgEdAAQAcCAAAAAAhgioASEABAB5IAAAAACGCL0BHQAEAI4gAAAAAIYI
zwEhAAQAlyAAAAAAhgjoASUABACsIAAAAACGCPQBIQAEALUgAAAAAIYIBwIdAAQAyiAAAAAAhggX
AiEABADTIAAAAACGAC4CIQAEANsgAAAAAIYANgIhAAQA4yAAAAAAhhiUAT0ABAADIQAAAADGALYC
QQAEACghAAAAAMYBwwJLAAgAOyEAAAAAxgHXAksACQA9IQAAAACGGJQBVQAKAEwhAAAAAIYIYgNb
AAsAbSEAAAAAhhiUAVUACwB8IQAAAADGALcDPQAMAJYhAAAAAMYAwgM9AAwAxCEAAAAAxgDOA28A
DAD4IQAAAADGALYCQQANAAQjAAAAAIYYlAE9ABEADCMAAAAAgxiUAT0AEQAUIwAAAACTCD8EfAAR
AE0jAAAAAJMIUwSBABEAVCMAAAAAkwhfBIYAEQBcIwAAAACWCIMEmgASAG8jAAAAAIYYlAE9ABIA
YyMAAAAAkRglCl0BEgAAAAEAlwQAAAIAngQAAAMAsgQAAAEAvAQAAAIAxAQAAAMAlwQAAAQAsgQA
AAEAlwQAAAEAzgQAAAEA0gQAAAEA0gQAAAEA3AQAAAEAvAQAAAIAxAQAAAMAlwQAAAQAsgQAAAEA
6ARZAJQBpABhAJQBpABpAJQBpABxAJQBpAB5AJQBpACBAJQBpACJAJQBpACRAJQBpACZAJQBpACh
AJQBpACpAJQBqQCxAJQBPQAJAJQBEwAJAJcErgAJAJ4EsgApAKIGtgAJAKsGuwApALIGwAAJAC4C
IQAJADYCIQARAJQBPQC5ANQGxQARANsGzAAZAJQBPQARAFIH0gDJAIsH1wDRAMQH3ADZAN8HWwDh
AJQBPQARALcDPQDpAJQB5wARAMIDPQBBACkIpABBAC8IPQBBADUIPQARAM4DbwA5AD0I7QDJAGYI
9wDxAI0I/AABAbMIAwEJAewICQERAfoIDwEZARkJJQBBACkIEwERASIJIQAhATUIPQApAI0IGQEZ
ADcJJQC5AEAJHgEpAEcJHQApAC4CIQApAZQBPQAxAZ4JMQExAbkJOgFJAJQBQAFJAZQBTQFZAZQB
PQAhAJQBPQAuABsA2QEuAGMAFwIuAAsAYQEuABMAqQEuACMA2QEuACsA3wEuADMAqQEuADsA7gEu
AEMA2QEuAFsADgLDAOsA4gDjAKMB4gBBAcsB4gBJAcMBVAFpAcMBVAHyACQBSAECAAEABAAJAAcA
CgAIAAwAAABCAikAAABMAi0AAABdAikAAABrAi0AAACAAjEAAACIAi0AAACXAikAAACjAi0AAAB1
A2AAAADyA4wAAABrBJEAAACPBJ8AAgACAAMAAgADAAUAAgAEAAcAAgAFAAkAAgAGAAsAAgAHAA0A
AgAIAA8AAgAJABEAAgARABMAAgAZABUAAgAaABcAAQAbABcAAgAcABkABIAAAAEAAAAAEjKPAAAA
AAAAfgYAAAsAAAAAAAAAAAAAAAEAtwAAAAAABAAAAAAAAAAAAAAACgASAQAAAAAEAAAAAAAAAAAA
AAAKABsBAAAAAAsAAAAAAAAAAAAAAAEAVgEAAAAACwAAAAAAAAAAAAAAAQD+AgAAAAALAAAAAAAA
AAAAAAABAOwGAAAAAAAAAAABAAAALAoAAAAAADxNb2R1bGU+AFNDX0Y4RUNFNEQxQzI4MTRFOENC
QUQ3RjhCOEE2NURGRUVCLmRsbABJbnB1dDBCdWZmZXIAVXNlckNvbXBvbmVudABDb25uZWN0aW9u
cwBWYXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfMzQ2NWE3MTQ3MDg1NDc3MDhkZmZh
MjU0ZTE0NmE0OGMuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZl
ci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRCdWZmZXIA
U2NyaXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRp
b24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBnZXRfUm93TnVtYmVyAGdldF9S
b3dOdW1iZXJfSXNOdWxsAGdldF9LZXlXb3JkTnVtYmVyAGdldF9LZXlXb3JkTnVtYmVyX0lzTnVs
bABnZXRfS2V5V29yZABnZXRfS2V5V29yZF9Jc051bGwAZ2V0X09jY3VycmVuY2VzAGdldF9PY2N1
cnJlbmNlc19Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABSb3dOdW1iZXIAUm93TnVtYmVyX0lz
TnVsbABLZXlXb3JkTnVtYmVyAEtleVdvcmROdW1iZXJfSXNOdWxsAEtleVdvcmQAS2V5V29yZF9J
c051bGwAT2NjdXJyZW5jZXMAT2NjdXJyZW5jZXNfSXNOdWxsAFByb2Nlc3NJbnB1dABJbnB1dDBf
UHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9uZW50AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZS5XcmFwcGVyAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABnZXRfRmlsZUNvbm5lY3Rpb24A
RmlsZUNvbm5lY3Rpb24AZmlsZW5hbWUAU3lzdGVtLklPAFRleHRXcml0ZXIAb3V0cHV0ZmlsZQBo
ZWFkZXJvdXQAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBY3F1aXJlQ29ubmVjdGlvbnMAU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVm
YXVsdABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBPdXRwdXRNYXAASW5wdXRJRABJbnB1dE5h
bWUAUm93AENvbXBvbmVudABUcmFuc2FjdGlvbgB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfRjhFQ0U0RDFDMjgxNEU4Q0JB
RDdGOEI4QTY1REZFRUIAR2V0SW50MzIASXNOdWxsAEdldFN0cmluZwBTdHJpbmcAU3RyaW5nQ29t
cGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1Bp
cGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElEVFND
b21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEASURUU1J1bnRpbWVDb25u
ZWN0aW9uQ29sbGVjdGlvbjEwMABnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAElEVFNS
dW50aW1lQ29ubmVjdGlvbjEwMABHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBnZXRfQ29ubmVj
dGlvbk1hbmFnZXIAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAU3RyZWFt
V3JpdGVyAFdyaXRlAEZsdXNoAERpc3Bvc2UAQWNxdWlyZUNvbm5lY3Rpb24ASURUU0lucHV0Q29s
bGVjdGlvbjEwMABnZXRfSW5wdXRDb2xsZWN0aW9uAEludDMyAElEVFNJbnB1dDEwMABnZXRfSXRl
bQBJRFRTSW5wdXRDb2x1bW5Db2xsZWN0aW9uMTAwAGdldF9JbnB1dENvbHVtbkNvbGxlY3Rpb24A
U3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQA
SURUU0lucHV0Q29sdW1uMTAwAGdldF9OYW1lAE1vdmVOZXh0AElEaXNwb3NhYmxlAFRvU3RyaW5n
AEZvcm1hdABnZXRfQ29sdW1uQ291bnQAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBB
c3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQAuY2N0b3IAU0NfMzQ2NWE3MTQ3MDg1NDc3MDhkZmZhMjU0ZTE0NmE0OGMuY3Nwcm9qLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAPSQBuAHAAdQB0ACAAMAAAHUYAaQBsAGUAQwBv
AG4AbgBlAGMAdABpAG8AbgAALTwALwB0AGEAYgBsAGUAPgA8AC8AYgBvAGQAeQA+ADwALwBoAHQA
bQBsAD4AAEs8AGgAdABtAGwAPgAKADwAYgBvAGQAeQA+AAoAPAB0AGEAYgBsAGUAIABiAG8AcgBk
AGUAcgA9ACIAMQAiAD4ACgA8AHQAcgA+AAAZPAB0AGQAPgB7ADAAfQA8AC8AdABkAD4AAAs8AC8A
dAByAD4AAAk8AHQAcgA+AAB/UwBDAF8AMwA0ADYANQBhADcAMQA0ADcAMAA4ADUANAA3ADcAMAA4
AGQAZgBmAGEAMgA1ADQAZQAxADQANgBhADQAOABjAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAALT2aVk3oghHoazzTKC13pEACImEXc2A
gMyRCLd6XFYZNOCJCSADARIVHQgSGQMgAAgDIAACAyAADgMoAAgDKAACAygADgMGEhADBhIUAyAA
AQkgBAEIDhIVEhkFIAEBEggDBhIJBSABARIJBCAAEh0EKAASHQIGDgMGEiECBgIEIAEBHAMGEiUD
BhIpBAAAEiUEAAASKQUAAQESKQQIABIlBAgAEikDBhIgBAAAEiAECAASIAQgAQEOBCABAQgDBhIV
AwYdCAQgAQgIBCABAggEIAEOCAYgAgIOEWEFIAEdCAgEIAASZQQgABJpBSABEm0OBAEAAAAFIAIB
DgIEIAEcHAQHARIdBCAAEnkGIAESgIEcBSAAEoCFBSAAEoCJAyAAHAUgAgEOHAQgARwIBQACDg4c
DAcEEoCNCBKAiRKAkQgAARKAmRGAnQUgABKAoQcgAgEOEoChBAcBEiUGIAEBEYCpCAEAAgAAAAAA
AwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ18zNDY1YTcxNDcwODU0NzcwOGRmZmEyNTRlMTQ2YTQ4
Yy5jc3Byb2oAAAUBAAAAAA4BAAlNaWNyb3NvZnQAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQg
MjAxMQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAA9DkAAAAAAAAA
AAAADjoAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABgEAAAAAAAAAAAAABgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAyjwASAAABADKPABI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR4AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABUAwAAAQAwADAAMAAwADAA
NABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0
AAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADMANAA2ADUA
YQA3ADEANAA3ADAAOAA1ADQANwA3ADAAOABkAGYAZgBhADIANQA0AGUAMQA0ADYAYQA0ADgAYwAu
AGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NAA2ADAAOAAuADMANgA2ADUAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AEMAXwBGADgARQBDAEUANABEADEAQwAyADgAMQA0AEUAOABDAEIAQQBEADcARgA4AEIAOABBADYA
NQBEAEYARQBFAEIALgBkAGwAbAAAAFwAGwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8AZgB0ACAAMgAwADEAMQAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAEYAOABFAEMARQA0
AEQAMQBDADIAOAAxADQARQA4AEMAQgBBAEQANwBGADgAQgA4AEEANgA1AEQARgBFAEUAQgAuAGQA
bABsAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAzADQANgA1AGEANwAx
ADQANwAwADgANQA0ADcANwAwADgAZABmAGYAYQAyADUANABlADEANAA2AGEANAA4AGMALgBjAHMA
cAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0
ADYAMAA4AC4AMwA2ADYANQA4AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA0ADYAMAA4AC4AMwA2ADYANQA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAgOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f8ece4d1c2814e8cbad7f8b8a65dfeeb</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">fbde1c2c136054fe050cb67f704cd304</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - RSS Feed\SCR - Feed HTML 2.Connections[FileConnection]"
                  connectionManagerID="Package.ConnectionManagers[KeywordOutputHtml]"
                  connectionManagerRefId="Package.ConnectionManagers[KeywordOutputHtml]"
                  name="FileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - RSS Feed\SCR - Feed HTML 2.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML 2.Inputs[Input 0].Columns[RowNumber]"
                      cachedDataType="i4"
                      cachedName="RowNumber"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[RowNumber]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML 2.Inputs[Input 0].Columns[KeyWordNumber]"
                      cachedDataType="i4"
                      cachedName="KeyWordNumber"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[KeyWordNumber]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML 2.Inputs[Input 0].Columns[KeyWord]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="KeyWord"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[KeyWord]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Feed HTML 2.Inputs[Input 0].Columns[Occurrences]"
                      cachedDataType="i4"
                      cachedName="Occurrences"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[Occurrences]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Get RSS Feed Data"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Net;
using System.IO;
using System.Text;
using System.Windows.Forms;
using System.Xml;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    // XML Document to hold RSS feed page
    XmlDocument RssXML = null;
    bool b = true;
    string ComponentName = "";

    public override void PreExecute()
    {
        // Get Name of Component
        ComponentName = this.ComponentMetaData.Name;

        // Fire OnInformation event for starting
        this.ComponentMetaData.FireInformation(-1, ComponentName, "Beginning Pre-execute", "", 0, ref b);

        // Perform base PreExecute() method
        base.PreExecute();

        try
        {
            // Fire OnInformation event for getting RSS feed data
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Start - Getting RSS Feed data (Pre-execute)", "", 0, ref b);

            // Retrieve RSS feed
            HttpWebRequest req = (HttpWebRequest)HttpWebRequest.Create("http://rss.cnn.com/rss/cnn_topstories.rss");
            HttpWebResponse res = (HttpWebResponse)req.GetResponse();
            Stream str = res.GetResponseStream();

            // Put RSS feed document into XML Document
            RssXML = new XmlDocument();
            RssXML.Load(str);

            // Fire OnInformation event for getting RSS feed data
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Complete - Getting RSS Feed data (Pre-execute)", "", 0, ref b);
        }
        catch (Exception ex)
        {
            // Fire OnError event if an error occurs
            this.ComponentMetaData.FireInformation(-1, ComponentName, ex.ToString(), "", 0, ref b);

            // Rethrow exception to stop processing
            throw (ex);
        }
        finally
        {
            // Fire OnInformation event for finished
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Finished Pre-execute", "", 0, ref b);
        }
    }

    public override void PostExecute()
    {
        // Perform base PostExecute() method
        base.PostExecute();
    }

    public override void CreateNewOutputRows()
    {
        // Fire OnInformation event for starting
        this.ComponentMetaData.FireInformation(-1, ComponentName, "Start - Create new output rows", "", 0, ref b);

        try
        {
            // Get feed properties
            string feed_title = RssXML.SelectSingleNode("(/rss/channel/title)[1]").InnerText;
            string feed_link = RssXML.SelectSingleNode("(/rss/channel/link)[1]").InnerText;
            string feed_language = RssXML.SelectSingleNode("(/rss/channel/language)[1]").InnerText;
            string feed_pubDate = RssXML.SelectSingleNode("(/rss/channel/pubDate)[1]").InnerText;

            // Initialize counters and shred articles
            int CurrentRowCount = 0;
            int CurrentPercent = 0;
            int LastPercent = 0;
            XmlNodeList xl = RssXML.SelectNodes("/rss/channel/item");
            int TotalRows = xl.Count;

            // Iterate articles
            foreach (XmlNode xn in xl)
            {
                // Get article properties
                string title = xn.SelectSingleNode("(title)[1]").InnerText;
                string link = xn.SelectSingleNode("(link)[1]").InnerText;
                string description = xn.SelectSingleNode("(description)[1]").InnerText;

                // Create new output row
                Output0Buffer.AddRow();

                // Assign values to the output buffer columns
                Output0Buffer.FeedTitle = feed_title;
                Output0Buffer.FeedLink = feed_link;
                Output0Buffer.FeedLanguage = feed_language;
                Output0Buffer.FeedPubDate = feed_pubDate;
                Output0Buffer.Title = title;
                Output0Buffer.Link = link;
                Output0Buffer.Description = description;

                // Increment row counter, log progress
                CurrentRowCount++;
                CurrentPercent = CurrentRowCount * 100 / TotalRows;

                // Log progress every time % changes
                if (LastPercent != CurrentPercent)
                {
                    // Fire OnProgress event
                    this.ComponentMetaData.FireProgress(string.Format("{0} of {1} rows processed.", CurrentRowCount, TotalRows),
                        CurrentPercent, CurrentRowCount, 0, ComponentName, ref b);

                    // Update % complete
                    LastPercent = CurrentPercent;
                }
            }
        }
        catch (Exception ex)
        {
            // Fire OnError event if an error occurs
            this.ComponentMetaData.FireInformation(-1, ComponentName, ex.ToString(), "", 0, ref b);
        }
        finally
        {
            // Perform base CreateNewOutputRows() method
            base.CreateNewOutputRows();

            // End of rows
            Output0Buffer.SetEndOfRowset();

            // Fire OnInformation event for starting
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Complete - Create new output rows", "", 0, ref b);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FeedTitle
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FeedTitle_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedLink
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FeedLink_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedLanguage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FeedLanguage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedPubDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool FeedPubDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Link
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Link_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_daae4df516fc425a87a49f09aab0c5dc.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_daae4df516fc425a87a49f09aab0c5dc.csproj")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_daae4df516fc425a87a49f09aab0c5dc.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_daae4df516fc425a87a49f09aab0c5dc.csproj</RootNamespace>
    <AssemblyName>SC_daae4df516fc425a87a49f09aab0c5dc.csproj</AssemblyName>
    <ProjectGuid>{E1646F46-9FF5-40D8-A26E-3B10F6ADF5C9}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{4EE0CB28-329B-421E-A06A-CCDBA0F58698}</msb:ProjectId>
		<msb:DisplayName>sc_daae4df516fc425a87a49f09aab0c5dc</msb:DisplayName>
		<msb:CodeName>sc_daae4df516fc425a87a49f09aab0c5dc</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_daae4df516fc425a87a49f09aab0c5dc.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Settings.get_Default():SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Sett" +
    "ings")]

namespace SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_daae4df516fc425a87a49f09aab0c5dc.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPGnKVAAAAAAAAAAAOAAAiELAQgAACIAAAAIAAAAAAAAfkAA
AAAgAAAAYAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACxAAABPAAAAAGAAAJAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJAEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
QAAAAAAAAEgAAAACAAUAECcAABwZAAABAAAAAAAAAFgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqJgIWAygOAAAKKloDLAgCFigPAAAKKnIB
AABwcxAAAAp6JgIXAygOAAAKKloDLAgCFygPAAAKKnIBAABwcxAAAAp6JgIYAygOAAAKKloDLAgC
GCgPAAAKKnIBAABwcxAAAAp6JgIZAygOAAAKKloDLAgCGSgPAAAKKnIBAABwcxAAAAp6JgIaAygO
AAAKKloDLAgCGigPAAAKKnIBAABwcxAAAAp6JgIbAygOAAAKKloDLAgCGygPAAAKKnIBAABwcxAA
AAp6JgIcAygOAAAKKloDLAgCHCgPAAAKKnIBAABwcxAAAAp6HgIoEQAACioeAigSAAAKKh4CKBMA
AAoqfgIoFAAACgICcxgAAAZ9AQAABAICcxkAAAZ9AgAABCoGKm4CewMAAAQsEgJ7AwAABG8RAAAG
AhR9AwAABCoTMAUASQAAAAEAABEWCisuBAaUDgRyngAAcCgVAAAKMxkCBQaaAgQGlCgWAAAKDgRz
AQAABn0DAAAEBhdYCgYDMs4CbxcAAAYCbxQAAAYCKBUAAAYqBio6AigXAAAKAgN9BAAABCo6AigX
AAAKAgN9BQAABCoAAAAbMAcACgEAAAIAABECAigZAAAKbxoAAAp9CAAABAIoGQAAChUCewgAAARy
sAAAcHLcAABwFgJ8BwAABG8bAAAKAigcAAAKAigZAAAKFQJ7CAAABHLeAABwctwAAHAWAnwHAAAE
bxsAAApyNgEAcCgdAAAKdBoAAAEKBm8eAAAKdBwAAAELB28fAAAKDAJzIAAACn0GAAAEAnsGAAAE
CG8hAAAKAigZAAAKFQJ7CAAABHKKAQBwctwAAHAWAnwHAAAEbxsAAAreJw0CKBkAAAoVAnsIAAAE
CW8iAAAKctwAAHAWAnwHAAAEbxsAAAoJet4kAigZAAAKFQJ7CAAABHLoAQBwctwAAHAWAnwHAAAE
bxsAAArcKgAAARwAAAAAOgCCvAAnHgAAAQIAOgCr5QAkAAAAAB4CKCMAAAoqGzAHACoCAAADAAAR
AigZAAAKFQJ7CAAABHISAgBwctwAAHAWAnwHAAAEbxsAAAoCewYAAARyUAIAcG8kAAAKbyUAAAoK
AnsGAAAEcoACAHBvJAAACm8lAAAKCwJ7BgAABHKuAgBwbyQAAApvJQAACgwCewYAAARy5AIAcG8k
AAAKbyUAAAoNFhMEFhMFFhMGAnsGAAAEchgDAHBvJgAAChMHEQdvJwAAChMIEQdvKAAAChMOOPcA
AAARDm8pAAAKdB8AAAETCREJcjwDAHBvJAAACm8lAAAKEwoRCXJSAwBwbyQAAApvJQAAChMLEQly
ZgMAcG8kAAAKbyUAAAoTDAJ7AwAABG8QAAAGAnsDAAAEBm8CAAAGAnsDAAAEB28EAAAGAnsDAAAE
CG8GAAAGAnsDAAAECW8IAAAGAnsDAAAEEQpvCgAABgJ7AwAABBELbwwAAAYCewMAAAQRDG8OAAAG
EQQXWBMEEQQfZFoRCFsTBREGEQUuOAIoGQAACnKIAwBwEQSMIgAAAREIjCIAAAEoKgAAChEFEQQW
AnsIAAAEAnwHAAAEbysAAAoRBRMGEQ5vLAAACjr9/v//3hURDnUkAAABEw8RDywHEQ9vLQAACtze
KRMNAigZAAAKFQJ7CAAABBENbyIAAApy3AAAcBYCfAcAAARvGwAACt4A3jUCKBcAAAYCewMAAARv
EQAABgIoGQAAChUCewgAAARyvgMAcHLcAABwFgJ8BwAABG8bAAAK3CoAAEFMAAACAAAAqAAAAAoB
AACyAQAAFQAAAAAAAAAAAAAAIwAAAKYBAADJAQAAKQAAAB4AAAECAAAAIwAAANEBAAD0AQAANQAA
AAAAAABmAhd9BwAABAJy3AAAcH0IAAAEAigTAAAGKh4CKBcAAAoqAAATMAMALQAAAAQAABF+CQAA
BC0gcgIEAHDQBwAAAigvAAAKbzAAAApzMQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoa
fgsAAAQqLnMjAAAGgAsAAAQqHgIoNAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAALAHAAAjfgAAHAgAADQKAAAjU3RyaW5ncwAAAABQEgAAhAQAACNV
UwDUFgAAEAAAACNHVUlEAAAA5BYAADgCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+iUzABYA
AAEAAAArAAAACAAAAAsAAAAkAAAAGAAAADQAAAAPAAAABAAAAAMAAAARAAAAEgAAAAEAAAAGAAAA
AQAAAAAACgABAAAAAAAGAP0A3AAGAAoB3AAKACoBIwEOAEYBMQESAH8B3AAGAI4B3AAWAMcDvAMK
ABIEAQQKAEMELgQKACAFBgUKAEsFOQUKAGIFOQUKAH8FOQUKAJ4FOQUKALcFOQUKANAFOQUKAOsF
OQUKAAYGOQUKAB8GOQUKAFgGOAYKAHgGOAYKANIGIwEGAAkH3AAaAH0HVAcOANAHxQcOAOIHxQcO
APEHxQcOAAkIxQcKACMIGQgKAEoIIwEWAFQIvAMWAHsIvAMKALAInQgKANYIIwEKANwIIwEKAAAJ
IwEKACcJFAkKAEQJIwEKAEkJIwEKAG0JOQUOAJkJgwkOALIJgwkKAMcJOAYAAAAAAQAAAAAAAQAB
AAEAEAA5AAAABQABAAEAAQAQAEcAAAAJAAEAEwABABAAVQAAAA0ABAAYAAEAEABhAAAADQAFABkA
AQAQAGsAAAAMAAYAGgAAABAAdgCAAA0ACQAeAAABEAC2AIAAEQALACIABgBVADcABgBhADsABgA5
AD8AAQCsA08AAQCsA08AAQDTA1kAAQDaA10AAQDcA2AAEQAiBGMAEQBPBGcAEQCTBIUAUCAAAAAA
hhicARMAAQBbIAAAAACGCKIBHQAEAGUgAAAAAIYIsAEiAAUAfCAAAAAAhgjFAR0ABgCGIAAAAACG
CNIBIgAHAJ0gAAAAAIYI5gEdAAgApyAAAAAAhgj3ASIACQC+IAAAAACGCA8CHQAKAMggAAAAAIYI
HwIiAAsA3yAAAAAAhgg2Ah0ADADpIAAAAACGCEACIgANAAAhAAAAAIYIUQIdAA4ACiEAAAAAhgha
AiIADwAhIQAAAACGCGoCHQAQACshAAAAAIYIegIiABEAQiEAAAAAhgCRAicAEgBKIQAAAACGAJgC
JwASAFIhAAAAAIYApwIrABIAWiEAAAAAhhicAScAEgB6IQAAAADGAWoDJwASAHwhAAAAAIEAeAMn
ABIAmCEAAAAAxgCMA0MAEgDtIQAAAADGAZgDJwAWAO8hAAAAAIYYnAFTABYA/iEAAAAAhhicAVMA
FwAQIgAAAADGAOoDJwAYAEQjAAAAAMYA9QMnABgATCMAAAAAxgCYAycAGADQJQAAAACGGJwBJwAY
AOolAAAAAIMYnAEnABgA9CUAAAAAkwhfBGsAGAAtJgAAAACTCHMEcAAYADQmAAAAAJMIfwR1ABgA
PCYAAAAAlgijBIkAGQBPJgAAAACGGJwBJwAZAEMmAAAAAJEY4gldARkAAAABALcEAAACAL4EAAAD
ANIEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwE
AAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABAOIEAAACAOoEAAADAPQEAAAEANIEAAAB
APwEAAABAPwEAAABANwEUQCcAR0AWQCcAR0AYQCcAR0AaQCcAR0AcQCcAR0AeQCcAR0AgQCcAR0A
iQCcAR0AkQCcAR0AmQCcAR0AoQCcAZMAqQCcAScACQCcARMACQDBBpgACQDKBpMAsQCcAR0ACQCR
AicACQCYAicACQCnAisAEQCcAScAEQDsBp4AEQD4BqUAGQCcAScAuQCcAScAEQCWB7QAwQCsB7kA
wQC1B70AEQDqAycAyQDbB8gAyQD9B84A2QAqCNMAOQCcAScAOQA8CNgAGQBBCLkAEQD1AycA+QBc
COkA+QBtCLkA+QCHCO8AAQGTCPYAAQG8CPoACQHKCAABGQHjCAQBwQDqCAsBCQH3CCsAIQEMCScA
KQGcAScAMQFbCTEBMQF2CToBQQCcAUABSQGcAU0BWQGcAScAIQCcAScALgAbANkBLgBjABcCLgAL
AGEBLgATAKkBLgAjANkBLgArAN8BLgAzAKkBLgA7AO4BLgBDANkBLgBbAA4CwwDDAK8A4wBzAa8A
YQGbAa8A6QGTAVQBCQKTAVQBqwDeABYBSAECAAEABwAPAAgAEQAAALMCLwAAAL0CMwAAAM4CLwAA
ANcCMwAAAOcCLwAAAPQCMwAAAAgDLwAAABQDMwAAACcDLwAAAC0DMwAAADoDLwAAAD8DMwAAAEsD
LwAAAFcDMwAAABIEewAAAIsEgAAAAK8EjgABAAIAAwABAAMABQABAAQABwABAAUACQABAAYACwAB
AAcADQABAAgADwABAAkAEQABAAoAEwABAAsAFQABAAwAFwABAA0AGQABAA4AGwABAA8AHQACAB8A
HwACACAAIQABACEAIQACACIAIwAEgAAAAQAAAAASEI8AAAAAAACWBgAACwAAAAAAAAAAAAAAAQC/
AAAAAAAEAAAAAAAAAAAAAAAKABoBAAAAAAQAAAAAAAAAAAAAAAoAIwEAAAAACwAAAAAAAAAAAAAA
AQBeAQAAAAAEAAAAAAAAAAAAAAAKALwDAAAAAAsAAAAAAAAAAAAAAAEAMAcAAAAAAAAAAAEAAADp
CQAAAAAAAAA8TW9kdWxlPgBTQ19kYWFlNGRmNTE2ZmM0MjVhODdhNDlmMDlhYWIwYzVkYy5jc3By
b2ouZGxsAE91dHB1dDBCdWZmZXIAVXNlckNvbXBvbmVudABDb25uZWN0aW9ucwBWYXJpYWJsZXMA
U2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfZGFhZTRkZjUxNmZjNDI1YTg3YTQ5ZjA5YWFiMGM1ZGMu
Y3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRCdWZmZXIAU2NyaXB0Q29tcG9u
ZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVC
dWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBzZXRfRmVlZFRpdGxlAHNldF9GZWVkVGl0bGVfSXNO
dWxsAHNldF9GZWVkTGluawBzZXRfRmVlZExpbmtfSXNOdWxsAHNldF9GZWVkTGFuZ3VhZ2UAc2V0
X0ZlZWRMYW5ndWFnZV9Jc051bGwAc2V0X0ZlZWRQdWJEYXRlAHNldF9GZWVkUHViRGF0ZV9Jc051
bGwAc2V0X1RpdGxlAHNldF9UaXRsZV9Jc051bGwAc2V0X0xpbmsAc2V0X0xpbmtfSXNOdWxsAHNl
dF9EZXNjcmlwdGlvbgBzZXRfRGVzY3JpcHRpb25fSXNOdWxsAEFkZFJvdwBTZXRFbmRPZlJvd3Nl
dABFbmRPZlJvd3NldABGZWVkVGl0bGUARmVlZFRpdGxlX0lzTnVsbABGZWVkTGluawBGZWVkTGlu
a19Jc051bGwARmVlZExhbmd1YWdlAEZlZWRMYW5ndWFnZV9Jc051bGwARmVlZFB1YkRhdGUARmVl
ZFB1YkRhdGVfSXNOdWxsAFRpdGxlAFRpdGxlX0lzTnVsbABMaW5rAExpbmtfSXNOdWxsAERlc2Ny
aXB0aW9uAERlc2NyaXB0aW9uX0lzTnVsbABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNo
ZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBQYXJlbnRDb21wb25lbnQAU3lzdGVt
LlhtbABYbWxEb2N1bWVudABSc3NYTUwAYgBDb21wb25lbnROYW1lAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBPdXRwdXRNYXAAdmFs
dWUAT3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1
dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDX2RhYWU0ZGY1MTZmYzQy
NWE4N2E0OWYwOWFhYjBjNWRjLmNzcHJvagBzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24AR2V0T3V0cHV0SUQAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9u
ZW50RW50cnlQb2ludEF0dHJpYnV0ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3Jh
cABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElEVFNDb21wb25lbnRN
ZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEAZ2V0X05hbWUARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5OZXQAV2ViUmVxdWVzdABDcmVhdGUASHR0cFdlYlJlcXVlc3QAV2ViUmVzcG9uc2UA
R2V0UmVzcG9uc2UASHR0cFdlYlJlc3BvbnNlAFN5c3RlbS5JTwBTdHJlYW0AR2V0UmVzcG9uc2VT
dHJlYW0ATG9hZABUb1N0cmluZwBFeGNlcHRpb24AWG1sTm9kZQBTZWxlY3RTaW5nbGVOb2RlAGdl
dF9Jbm5lclRleHQAWG1sTm9kZUxpc3QAU2VsZWN0Tm9kZXMAZ2V0X0NvdW50AFN5c3RlbS5Db2xs
ZWN0aW9ucwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AEludDMyAFN0cmlu
ZwBGb3JtYXQARmlyZVByb2dyZXNzAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAU3lzdGVt
LkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfZGFhZTRkZjUxNmZjNDI1YTg3
YTQ5ZjA5YWFiMGM1ZGMuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAw
AAArQgBlAGcAaQBuAG4AaQBuAGcAIABQAHIAZQAtAGUAeABlAGMAdQB0AGUAAQEAV1MAdABhAHIA
dAAgAC0AIABHAGUAdAB0AGkAbgBnACAAUgBTAFMAIABGAGUAZQBkACAAZABhAHQAYQAgACgAUABy
AGUALQBlAHgAZQBjAHUAdABlACkAAVNoAHQAdABwADoALwAvAHIAcwBzAC4AYwBuAG4ALgBjAG8A
bQAvAHIAcwBzAC8AYwBuAG4AXwB0AG8AcABzAHQAbwByAGkAZQBzAC4AcgBzAHMAAF1DAG8AbQBw
AGwAZQB0AGUAIAAtACAARwBlAHQAdABpAG4AZwAgAFIAUwBTACAARgBlAGUAZAAgAGQAYQB0AGEA
IAAoAFAAcgBlAC0AZQB4AGUAYwB1AHQAZQApAAEpRgBpAG4AaQBzAGgAZQBkACAAUAByAGUALQBl
AHgAZQBjAHUAdABlAAE9UwB0AGEAcgB0ACAALQAgAEMAcgBlAGEAdABlACAAbgBlAHcAIABvAHUA
dABwAHUAdAAgAHIAbwB3AHMAAS8oAC8AcgBzAHMALwBjAGgAYQBuAG4AZQBsAC8AdABpAHQAbABl
ACkAWwAxAF0AAC0oAC8AcgBzAHMALwBjAGgAYQBuAG4AZQBsAC8AbABpAG4AawApAFsAMQBdAAA1
KAAvAHIAcwBzAC8AYwBoAGEAbgBuAGUAbAAvAGwAYQBuAGcAdQBhAGcAZQApAFsAMQBdAAAzKAAv
AHIAcwBzAC8AYwBoAGEAbgBuAGUAbAAvAHAAdQBiAEQAYQB0AGUAKQBbADEAXQAAIy8AcgBzAHMA
LwBjAGgAYQBuAG4AZQBsAC8AaQB0AGUAbQAAFSgAdABpAHQAbABlACkAWwAxAF0AABMoAGwAaQBu
AGsAKQBbADEAXQAAISgAZABlAHMAYwByAGkAcAB0AGkAbwBuACkAWwAxAF0AADV7ADAAfQAgAG8A
ZgAgAHsAMQB9ACAAcgBvAHcAcwAgAHAAcgBvAGMAZQBzAHMAZQBkAC4AAENDAG8AbQBwAGwAZQB0
AGUAIAAtACAAQwByAGUAYQB0AGUAIABuAGUAdwAgAG8AdQB0AHAAdQB0ACAAcgBvAHcAcwABf1MA
QwBfAGQAYQBhAGUANABkAGYANQAxADYAZgBjADQAMgA1AGEAOAA3AGEANAA5AGYAMAA5AGEAYQBi
ADAAYwA1AGQAYwAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAANlSsNkoHh5Pno/8E71kifYACImEXc2AgMyRCLd6XFYZNOCJCSADARIVHQgS
GQQgAQEOBCABAQIDIAABAyAAAgMoAA4DKAACAwYSEAMGEhQDBhIICyAEAQgdCB0SFRIZAwYSCQUg
AQESCQMGEh0CBgICBg4DBhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYSIAQAABIg
BAgAEiAEIAEBCAUgAgEIHAYAAggSGQ4FIAEdCAgDBwEIBAEAAAAEIAASYQMgAA4KIAYBCA4ODggQ
AgUAARJlDgQgABJtBCAAEnUFIAEBEnUKBwQSaRJxEnUSeQUgARJ9DgYgARKAgQ4DIAAIBSAAEoCF
AyAAHAYAAw4OHBwKIAYBDggICA4QAhoHEA4ODg4ICAgSgIEIEn0ODg4SeRKAhRKAkQgAARKAmRGA
nQUgABKAoQcgAgEOEoChBAcBEiEGIAEBEYCpCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8B
ACpTQ19kYWFlNGRmNTE2ZmM0MjVhODdhNDlmMDlhYWIwYzVkYy5jc3Byb2oAAAUBAAAAAA4BAAlN
aWNyb3NvZnQAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQgMjAxMQAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAVEAAAAAAAAAAAAAAbkAAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAGBAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ADgEAAAAAAAAAAAAADgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAQjwASAAABABCPABI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sASYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB0AwAAAQAwADAAMAAwADAANABi
ADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAA
gAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGQAYQBhAGUANABk
AGYANQAxADYAZgBjADQAMgA1AGEAOAA3AGEANAA5AGYAMAA5AGEAYQBiADAAYwA1AGQAYwAuAGMA
cwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANAA2
ADAAOAAuADMANgA2ADIANAAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMA
XwBkAGEAYQBlADQAZABmADUAMQA2AGYAYwA0ADIANQBhADgANwBhADQAOQBmADAAOQBhAGEAYgAw
AGMANQBkAGMALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABcABsAAQBMAGUAZwBhAGwAQwBvAHAA
eQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAg
ADIAMAAxADEAAAAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBkAGEAYQBlADQAZABmADUAMQA2AGYAYwA0ADIANQBhADgANwBhADQAOQBmADAAOQBhAGEAYgAw
AGMANQBkAGMALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAQwBfAGQAYQBhAGUANABkAGYANQAxADYAZgBjADQAMgA1AGEAOAA3AGEANAA5
AGYAMAA5AGEAYQBiADAAYwA1AGQAYwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUA
YwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADQANgAwADgALgAzADYANgAyADQAAAAAAEgADwAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADQANgAwADgALgAzADYA
NgAyADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACAMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_daae4df516fc425a87a49f09aab0c5dc</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">a77a9e93b9d7d1377fcd167bb4f0de64</property>
              </properties>
              <outputs>
                <output
                  refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedTitle]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedTitle]"
                      name="FeedTitle" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLink]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLink]"
                      name="FeedLink" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLanguage]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLanguage]"
                      name="FeedLanguage" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedPubDate]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedPubDate]"
                      name="FeedPubDate" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Link]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Link]"
                      name="Link" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Description]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Description]"
                      name="Description" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - RSS Feed\SCR - Number Rows"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Number Rows"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    int row_number;

    public override void PreExecute()
    {
        // Execute base PreExecute() method
        base.PreExecute();
        
        // Initialize row number
        row_number = 1;
    }

    public override void PostExecute()
    {
        base.PostExecute();
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // Assign row_number to RowNumber column
        Row.RowNumber = row_number;

        // Increment row_number
        row_number++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_68095bfdcf3e4f12848c69d6ef3233fe.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj</RootNamespace>
    <AssemblyName>SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj</AssemblyName>
    <ProjectGuid>{A1DFF2DA-8ECA-4B41-A6F9-A1A84F06911D}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{222D62C4-F4F9-4BB1-AC8C-B4AF4D10FED5}</msb:ProjectId>
		<msb:DisplayName>sc_68095bfdcf3e4f12848c69d6ef3233fe</msb:DisplayName>
		<msb:CodeName>sc_68095bfdcf3e4f12848c69d6ef3233fe</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_68095bfdcf3e4f12848c69d6ef3233fe.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Settings.get_Default():SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Sett" +
    "ings")]

namespace SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAOoKVAAAAAAAAAAAOAAAiELAQgAABQAAAAIAAAAAAAA/jEA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKwxAABPAAAAAEAAAJAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
MQAAAAAAAEgAAAACAAUAaCIAAEQPAAABAAAAAAAAALAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqOgIWA4wVAAABKA4AAAoqWgMsCAIWKA8A
AAoqcgEAAHBzEAAACnoeAigRAAAKKh4CKBIAAAoqfgIoEwAACgICcwoAAAZ9AQAABAICcwsAAAZ9
AgAABCqSBHKeAABwGm8UAAAKLBUCBQIDKBUAAAoOBHMBAAAGbwgAAAYqSisHAgNvCQAABgNvBAAA
Bi3xKgYqOgIoFgAACgIDfQMAAAQqOgIoFgAACgIDfQQAAAQqOgIoGAAACgIXfQUAAAQqHgIoGQAA
CipuAwJ7BQAABG8CAAAGAiV7BQAABBdYfQUAAAQqHgIoBgAABioeAigWAAAKKhMwAwAtAAAAAQAA
EX4GAAAELSByrgAAcNAHAAACKBsAAApvHAAACnMdAAAKCgaABgAABH4GAAAEKhp+BwAABCoeAoAH
AAAEKhp+CAAABCoucxUAAAaACAAABCoeAiggAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAALAUAACN+AACYBQAAwAYAACNTdHJpbmdzAAAAAFgMAAAw
AQAAI1VTAIgNAAAQAAAAI0dVSUQAAACYDQAArAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6
JTMAFgAAAQAAACAAAAAIAAAACAAAABYAAAAPAAAAIAAAAA8AAAABAAAAAwAAAAUAAAAGAAAAAQAA
AAQAAAABAAAAAAAKAAEAAAAAAAYA/ADbAAYACQHbAAoAKQEiAQ4ARQEwARIAfgHbAAYAjQHbAAoA
bgJdAgoAnwKKAgoAeANeAwoAowORAwoAugORAwoA1wORAwoA9gORAwoADwSRAwoAKASRAwoAQwSR
AwoAXgSRAwoAdwSRAwoAsASQBAoA0ASQBAoAGQUiAQoAMAUiAQoASgUiAQoAUQUiAQYAegXbAAoA
tAWhBQoA0QUiAQoA1gUiAQoA+gWRAw4AJgYQBg4APwYQBgoAVAaQBAAAAAABAAAAAAABAAEAAQAQ
ADkAAAAFAAEAAQABABAARgAAAAkAAQAGAAEAEABUAAAADQADAAoAAQAQAGAAAAANAAQACwABABAA
agAAAAwABQAMAAAAEAB1AH8ADQAGABAAAAEQALUAfwARAAgAFAAGAFQAMwAGAGAANwABACsCTwAB
ACsCTwABADsCWQARAH4CXAARAKsCYAARAO8CfgBQIAAAAACGGJsBEwABAFsgAAAAAIYIoQEdAAQA
aiAAAAAAhgivASIABQCBIAAAAACGAMQBJwAGAIkgAAAAAIYAzAEnAAYAkSAAAAAAhhibATsABgCx
IAAAAADGAPMBPwAGANYgAAAAAMYBAAJJAAoA6SAAAAAAxgEUAkkACwDrIAAAAACGGJsBUwAMAPog
AAAAAIYYmwFTAA0ACSEAAAAAxgBGAjsADgAYIQAAAADGAFECOwAOACAhAAAAAMYAFAJJAA4APCEA
AAAAhhibATsADwBEIQAAAACDGJsBOwAPAEwhAAAAAJMIuwJkAA8AhSEAAAAAkwjPAmkADwCMIQAA
AACTCNsCbgAPAJQhAAAAAJYI/wKCABAApyEAAAAAhhibATsAEACbIQAAAACRGG8G0AAQAAAAAQAT
AwAAAgAaAwAAAwAuAwAAAQA4AwAAAQA4AwAAAQA+AwAAAgBGAwAAAwATAwAABAAuAwAAAQATAwAA
AQBQAwAAAQBUAwAAAQBUAwAAAQBQAwAAAQA4A0kAmwGMAFEAmwGMAFkAmwGMAGEAmwGMAGkAmwGM
AHEAmwGMAHkAmwGMAIEAmwGMAIkAmwGMAJEAmwGMAJkAmwEdAKEAmwE7AAkAmwETAAkAHwWRAAkA
KAUdALEAmwGMAAkAxAEnAAkAzAEnABEAmwE7ALkAYgWXABEAaQWeABkAmwE7AMkAmwE7ABEARgI7
ABEAUQI7ANEAmwE7ANkA6AWpANkAAwawADkAmwG1APEAmwHBAAEBmwE7ACEAmwE7AC4AGwBMAS4A
YwCKAS4AIwBMAS4AKwBSAS4AWwCBAS4AEwAcAS4AMwAcAS4AQwBMAS4ACwDUAC4AOwBhAWkA8wDH
AIkA8wDHAMMAuwCkAOMA0wCkAAEB+wCkALwAAgABAAcAAwAIAAUAAADYASsAAADiAS8AAABuAnQA
AADnAnkAAAALA4cAAQACAAMAAQADAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEAAAAA
EhmPAAAAAAAA7gQAAAsAAAAAAAAAAAAAAAEAvgAAAAAABAAAAAAAAAAAAAAACgAZAQAAAAAEAAAA
AAAAAAAAAAAKACIBAAAAAAsAAAAAAAAAAAAAAAEAXQEAAAAAAAAAAAEAAAB2BgAAAAAAAAA8TW9k
dWxlPgBTQ182ODA5NWJmZGNmM2U0ZjEyODQ4YzY5ZDZlZjMyMzNmZS5jc3Byb2ouZGxsAElucHV0
MEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJl
c291cmNlcwBTQ182ODA5NWJmZGNmM2U0ZjEyODQ4YzY5ZDZlZjMyMzNmZS5jc3Byb2ouUHJvcGVy
dGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXRO
YW1lTWFwAC5jdG9yAHNldF9Sb3dOdW1iZXIAc2V0X1Jvd051bWJlcl9Jc051bGwATmV4dFJvdwBF
bmRPZlJvd3NldABSb3dOdW1iZXIAUm93TnVtYmVyX0lzTnVsbABQcm9jZXNzSW5wdXQASW5wdXQw
X1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AFBhcmVudENvbXBvbmVudAByb3df
bnVtYmVyAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3Vy
Y2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3Vs
dHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVyQ29s
dW1uSW5kZXhlcwBPdXRwdXRNYXAAdmFsdWUASW5wdXRJRABJbnB1dE5hbWUAUm93AENvbXBvbmVu
dABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0
ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFz
c2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAU0NfNjgwOTViZmRjZjNlNGYxMjg0OGM2OWQ2ZWYzMjMzZmUuY3Nwcm9qAEludDMyAHNldF9J
dGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmcAU3RyaW5nQ29tcGFy
aXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9B
c3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ182
ODA5NWJmZGNmM2U0ZjEyODQ4YzY5ZDZlZjMyMzNmZS5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBv
AHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAA
dgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAA
D0kAbgBwAHUAdAAgADAAAH9TAEMAXwA2ADgAMAA5ADUAYgBmAGQAYwBmADMAZQA0AGYAMQAyADgA
NAA4AGMANgA5AGQANgBlAGYAMwAyADMAMwBmAGUALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAn4Ww5wnZSQod1gCFGP2ZbAAiJhF3NgIDM
kQi3elxWGTTgiQkgAwESFR0IEhkEIAEBCAQgAQECAyAAAgMoAAgDKAACAwYSEAMGEhQDIAABCSAE
AQgOEhUSGQUgAQESCAMGEgkFIAEBEgkCBggDBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQI
ABIhAwYSIAQAABIgBAgAEiAEIAEBDgUgAgEIHAYgAgIOEWEFIAEdCAgEAQAAAAYAARJtEXEEIAAS
dQYgAgEOEnUEBwESHQUgAQERfQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU0NfNjgw
OTViZmRjZjNlNGYxMjg0OGM2OWQ2ZWYzMjMzZmUuY3Nwcm9qAAAFAQAAAAAOAQAJTWljcm9zb2Z0
AAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTEAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEAAADUMQAAAAAAAAAAAADuMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAA4DEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIEAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA4BAAAAAAAAAAAAAA4BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAGY8AEgAAAQAZjwASPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEmAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAdAMAAAEAMAAwADAA
MAAwADQAYgAwAAAANAAKAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBv
AGYAdAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA2ADgA
MAA5ADUAYgBmAGQAYwBmADMAZQA0AGYAMQAyADgANAA4AGMANgA5AGQANgBlAGYAMwAyADMAMwBm
AGUALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADQANgAwADgALgAzADYANgAzADMAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8ANgA4ADAAOQA1AGIAZgBkAGMAZgAzAGUANABmADEAMgA4ADQAOABjADYAOQBkADYA
ZQBmADMAMgAzADMAZgBlAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAXAAbAAEATABlAGcAYQBs
AEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMA
bwBmAHQAIAAyADAAMQAxAAAAAACIAC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBDAF8ANgA4ADAAOQA1AGIAZgBkAGMAZgAzAGUANABmADEAMgA4ADQAOABjADYAOQBkADYA
ZQBmADMAMgAzADMAZgBlAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1
AGMAdABOAGEAbQBlAAAAAABTAEMAXwA2ADgAMAA5ADUAYgBmAGQAYwBmADMAZQA0AGYAMQAyADgA
NAA4AGMANgA5AGQANgBlAGYAMwAyADMAMwBmAGUALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADYAMAA4AC4AMwA2ADYAMwAzAAAA
AABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADYAMAA4
AC4AMwA2ADYAMwAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAADIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_68095bfdcf3e4f12848c69d6ef3233fe</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">0814edb0ad89a23f1c7c61df1efff10c</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - RSS Feed\SCR - Number Rows.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DFT - RSS Feed\SCR - Number Rows.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0].Columns[RowNumber]"
                      dataType="i4"
                      lineageId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0].Columns[RowNumber]"
                      name="RowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - RSS Feed\SCR - Parse Words"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Parse Words"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string ComponentName = "";

    public override void PreExecute()
    {
        // Call base method
        base.PreExecute();
    }

    public override void PostExecute()
    {
        // Call base method
        base.PostExecute();
    }

    public override void Input0_ProcessInput(Input0Buffer Buffer)
    {
        // Get Component Name
        ComponentName = this.ComponentMetaData.Name;

        // Iterate rows and process them one at a time
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }

        // Call base method
        base.Input0_ProcessInput(Buffer);

        // At end of input buffer set end of rowset market on both outputs
        if (Buffer.EndOfRowset())
        {
            KeywordOutputBuffer.SetEndOfRowset();
            RssFeedOutputBuffer.SetEndOfRowset();
        }
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        bool b = true;
        try
        {
            // Add a new row to RssFeedOutputBuffer
            RssFeedOutputBuffer.AddRow();

            // Set columns of new rows on output
            RssFeedOutputBuffer.Description = Row.Description;
            RssFeedOutputBuffer.FeedLanguage = Row.FeedLanguage;
            RssFeedOutputBuffer.FeedLink = Row.FeedLink;
            RssFeedOutputBuffer.FeedPubDate = Row.FeedPubDate;
            RssFeedOutputBuffer.FeedTitle = Row.FeedTitle;
            RssFeedOutputBuffer.Link = Row.Link;
            RssFeedOutputBuffer.RowNumber = Row.RowNumber;
            RssFeedOutputBuffer.Title = Row.Title;

            // Eliminate all punctuation from description, except spaces
            StringBuilder sb = new StringBuilder(2200);
            foreach (char c in Row.Description)
            {
                if (Char.IsLetterOrDigit(c) || c == ' ')
                    sb.Append(c);
                else
                    sb.Append(' ');
            }

            // Split the clean string
            string[] words = Regex.Split(sb.ToString(), " ");
            int i = 1;

            // Loop iterate keywords and count occurrences; store in hash table
            Hashtable occurrence = new Hashtable(100);
            foreach (string keyword in words)
            {
                if (occurrence.ContainsKey(keyword))
                    occurrence[keyword] = ((int)occurrence[keyword]) + 1;
                else
                    occurrence.Add(keyword, 1);
            }

            // Send results stored in hash table out to second output
            foreach (DictionaryEntry d in occurrence)
            {
                if (d.Key != "")
                {
                    KeywordOutputBuffer.AddRow();
                    KeywordOutputBuffer.RowNumber = Row.RowNumber;
                    KeywordOutputBuffer.KeyWordNumber = i;
                    KeywordOutputBuffer.KeyWord = (string)d.Key;
                    KeywordOutputBuffer.Occurrences = (int)d.Value;
                    i++;
                }
            }
        }
        catch (Exception ex)
        {
            this.ComponentMetaData.FireError(-1, ComponentName, ex.ToString(), "", 0, out b);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FeedTitle
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FeedTitle_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FeedLink
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FeedLink_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String FeedLanguage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool FeedLanguage_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String FeedPubDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool FeedPubDate_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Title
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Title_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String Link
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool Link_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String Description
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool Description_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 RowNumber
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool RowNumber_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class RssFeedOutputBuffer: ScriptBuffer

{
    public RssFeedOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FeedTitle
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FeedTitle_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedLink
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FeedLink_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedLanguage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FeedLanguage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedPubDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool FeedPubDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Link
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Link_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowNumber
    {
        set
        {
            this[7] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class KeywordOutputBuffer: ScriptBuffer

{
    public KeywordOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 KeyWordNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool KeyWordNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String KeyWord
    {
        set
        {
            this[2] = value;
        }
    }
    public bool KeyWord_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Occurrences
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Occurrences_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public RssFeedOutputBuffer RssFeedOutputBuffer;

    public KeywordOutputBuffer KeywordOutputBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != RssFeedOutputBuffer)
        {
            RssFeedOutputBuffer.SetEndOfRowset();
            RssFeedOutputBuffer = null;
        }

        if (null != KeywordOutputBuffer)
        {
            KeywordOutputBuffer.SetEndOfRowset();
            KeywordOutputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"RssFeedOutput"))
            {
                RssFeedOutputBuffer = new RssFeedOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"KeywordOutput"))
            {
                KeywordOutputBuffer = new KeywordOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_8db21580437549e19984e23486e95c45.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_8db21580437549e19984e23486e95c45.csproj</RootNamespace>
    <AssemblyName>SC_8db21580437549e19984e23486e95c45.csproj</AssemblyName>
    <ProjectGuid>{A100AEA2-D4A1-466E-B821-3C4869C50C33}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8db21580437549e19984e23486e95c45.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_8db21580437549e19984e23486e95c45.csproj")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{1BF9EF2C-9CB8-44FA-85C4-BDF32CD1421B}</msb:ProjectId>
		<msb:DisplayName>sc_8db21580437549e19984e23486e95c45</msb:DisplayName>
		<msb:CodeName>sc_8db21580437549e19984e23486e95c45</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_8db21580437549e19984e23486e95c45.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_8db21580437549e19984e23486e95c45.csproj.Properties.Settings.get_Default():SC_8db21580437549e19984e23486e95c45.csproj.Properties.Sett" +
    "ings")]

namespace SC_8db21580437549e19984e23486e95c45.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_8db21580437549e19984e23486e95c45.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_8db21580437549e19984e23486e95c45.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_8db21580437549e19984e23486e95c45.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8db21580437549e19984e23486e95c45.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8db21580437549e19984e23486e95c45.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8db21580437549e19984e23486e95c45.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABWoKVAAAAAAAAAAAOAAAiELAQgAACYAAAAIAAAAAAAA3kUA
AAAgAAAAYAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJBFAABLAAAAAGAAAJAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJAEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
RQAAAAAAAEgAAAACAAUAqCgAAOgcAAABAAAAAAAAAPAnAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxAAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxAAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxAAAAoqIgIZKBEAAAoqUgJ7DgAACgJ7DwAAChqUbxAA
AAoqIgIaKBEAAAoqUgJ7DgAACgJ7DwAAChuUbxAAAAoqIgIbKBEAAAoqUgJ7DgAACgJ7DwAAChyU
bxAAAAoqIgIcKBEAAAoqUgJ7DgAACgJ7DwAACh2UbxIAAAoqIgIdKBEAAAoqHgIoEwAACioeAigU
AAAKKioCAwQFKA0AAAoqJgIWAygVAAAKKloDLAgCFigWAAAKKnIBAABwcxcAAAp6JgIXAygVAAAK
KloDLAgCFygWAAAKKnIBAABwcxcAAAp6JgIYAygVAAAKKloDLAgCGCgWAAAKKnIBAABwcxcAAAp6
JgIZAygVAAAKKloDLAgCGSgWAAAKKnIBAABwcxcAAAp6JgIaAygVAAAKKloDLAgCGigWAAAKKnIB
AABwcxcAAAp6JgIbAygVAAAKKloDLAgCGygWAAAKKnIBAABwcxcAAAp6JgIcAygVAAAKKloDLAgC
HCgWAAAKKnIBAABwcxcAAAp6OgIdA4wWAAABKBUAAAoqWgMsCAIdKBYAAAoqcgEAAHBzFwAACnoe
AigYAAAKKh4CKBkAAAoqHgIoFAAACioqAgMEBSgNAAAKKjoCFgOMFgAAASgVAAAKKloDLAgCFigW
AAAKKnIBAABwcxcAAAp6OgIXA4wWAAABKBUAAAoqWgMsCAIXKBYAAAoqcgEAAHBzFwAACnomAhgD
KBUAAAoqWgMsCAIYKBYAAAoqcgEAAHBzFwAACno6AhkDjBYAAAEoFQAACipaAywIAhkoFgAACipy
AQAAcHMXAAAKeh4CKBgAAAoqHgIoGQAACioeAigUAAAKKn4CKBoAAAoCAnM8AAAGfQEAAAQCAnM9
AAAGfQIAAAQqAAAAAzAFAE8AAAAAAAAABHKeAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMBAAAGbzoA
AAYFbx0AAAosIwICewUAAAQXWH0FAAAEAnsFAAAEFzMMAm82AAAGAig3AAAGKgYq1gJ7AwAABCwS
AnsDAAAEbyYAAAYCFH0DAAAEAnsEAAAELBICewQAAARvMgAABgIUfQQAAAQqABMwBQBnAAAAAQAA
ERYKK1gEBpQOBHKuAABwKB4AAAozGQIFBpoCBAaUKBwAAAoOBHMUAAAGfQMAAAQEBpQOBHLKAABw
KB4AAAozGQIFBpoCBAaUKBwAAAoOBHMoAAAGfQQAAAQGF1gKBgMypAJvOQAABioGKkorBwIDbzsA
AAYDbxIAAAYt8SoGKjoCKB8AAAoCA30GAAAEKjoCKB8AAAoCA30HAAAEKh4CKCEAAAoqHgIoIgAA
CioDMAIASAAAAAAAAAACAigjAAAKbyQAAAp9CAAABCsHAgNvOwAABgNvEgAABi3xAgMoOgAABgNv
EwAABiwWAnsEAAAEbzIAAAYCewMAAARvJgAABiobMAcAKwIAAAIAABEXCgJ7AwAABG8lAAAGAnsD
AAAEA28OAAAGbyEAAAYCewMAAAQDbwYAAAZvGQAABgJ7AwAABANvBAAABm8XAAAGAnsDAAAEA28I
AAAGbxsAAAYCewMAAAQDbwIAAAZvFQAABgJ7AwAABANvDAAABm8fAAAGAnsDAAAEA28QAAAGbyMA
AAYCewMAAAQDbwoAAAZvHQAABiCYCAAAcyUAAAoLA28OAAAGEwkWEworMBEJEQpvJgAACgwIKCcA
AAotBQgfIDMKBwhvKAAACiYrCQcfIG8oAAAKJhEKF1gTChEKEQlvKQAACjLFB28qAAAKcuYAAHAo
KwAACg0XEwQfZHMsAAAKEwUJEwsWEwwrRxELEQyaEwYRBREGby0AAAosIBEFEQYRBREGby4AAAql
FgAAARdYjBYAAAFvLwAACisPEQURBheMFgAAAW8wAAAKEQwXWBMMEQwRC45pMrERBW8xAAAKEw0r
eRENbzIAAAqlIQAAARMHEgcoMwAACnLqAABwLl0CewQAAARvMQAABgJ7BAAABANvEAAABm8pAAAG
AnsEAAAEEQRvKwAABgJ7BAAABBIHKDMAAAp0FwAAAW8tAAAGAnsEAAAEEgcoNAAACqUWAAABby8A
AAYRBBdYEwQRDW81AAAKOnv////eFRENdSIAAAETDhEOLAcRDm82AAAK3N4lEwgCKCMAAAoVAnsI
AAAEEQhvKgAACnLqAABwFhIAbzcAAAreACoAQTQAAAIAAABlAQAAiQAAAO4BAAAVAAAAAAAAAAAA
AAACAAAAAwIAAAUCAAAlAAAAIwAAAUoCcuoAAHB9CAAABAIoNAAABioeAigfAAAKKgATMAMALQAA
AAMAABF+CQAABC0gcuwAAHDQCQAAAig5AAAKbzoAAApzOwAACgoGgAkAAAR+CQAABCoafgoAAAQq
HgKACgAABCoafgsAAAQqLnNIAAAGgAsAAAQqHgIoPgAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMALAAAjfgAALAwAAPAMAAAjU3RyaW5ncwAAAAAc
GQAAbAEAACNVUwCIGgAAEAAAACNHVUlEAAAAmBoAAFACAAAjQmxvYgAAAAAAAAACAAABVxWiAQkB
AAAA+iUzABYAAAEAAAAqAAAACgAAAAsAAABJAAAAMAAAAD4AAAAPAAAAAwAAAAUAAAArAAAALAAA
AAEAAAAFAAAAAQAAAAAACgABAAAAAAAGACQBAwEGADEBAwEKAFEBSgEOAG0BWAESAKYBAwEGALUB
AwEKAIIGcQYKALMGngYKAKYHjAcKANEHvwcKAOgHvwcKAAUIvwcKACQIvwcKAD0IvwcKAFYIvwcK
AHEIvwcKAIwIvwcKAKUIvwcKAN4IvggKAP4IvggKAHIJSgEKAIwJSgEKAJIJSgEKAJkJSgEGAN4J
AwEWAFIKKQoKAJYKigoKAK4KSgEOAP0K3goKABwLCQsKAD8LCQsKAGMLCQsKAHsLCQsKAKYLSgEK
AMQLSgEKAOELzgsKAP4LSgEKAAMMSgEKACcMvwcOAFMMPQwOAGwMPQwKAIEMvggAAAAAAQAAAAAA
AQABAAEAEAA5AAAABQABAAEAAQAQAEYAAAAFAAEAFAABABAAWgAAAAUAAQAoAAEAEABuAAAACQAB
ADQAAQAQAHwAAAANAAYAPAABABAAiAAAAA0ABwA9AAEAEACSAAAAFAAIAD4AAAAQAJ0ApwANAAkA
QwAAARAA3QCnABEACwBHAAYAfABIAAYAiABMAAYARgBQAAYAWgBUAAEAswVYAAEAPAZ3AAEAPAZ3
AAEATAaBABEAkgaEABEAvwaIABEAAwemAFAgAAAAAIYYwwETAAEAWyAAAAAAhgjJAR0ABABwIAAA
AACGCNcBIQAEAHkgAAAAAIYI7AEdAAQAjiAAAAAAhgj5ASEABACXIAAAAACGCA0CHQAEAKwgAAAA
AIYIHgIhAAQAtSAAAAAAhgg2Ah0ABADKIAAAAACGCEYCIQAEANMgAAAAAIYIXQIdAAQA6CAAAAAA
hghnAiEABADxIAAAAACGCHgCHQAEAAYhAAAAAIYIgQIhAAQADyEAAAAAhgiRAh0ABAAkIQAAAACG
CKECIQAEAC0hAAAAAIYIuAIlAAQAQiEAAAAAhgjGAiEABABLIQAAAACGANsCIQAEAFMhAAAAAIYA
4wIhAAQAWyEAAAAAhhjDARMABABmIQAAAACGCMEDNQAHAHAhAAAAAIYIzwM6AAgAhyEAAAAAhgjk
AzUACQCRIQAAAACGCPEDOgAKAKghAAAAAIYIBQQ1AAsAsiEAAAAAhggWBDoADADJIQAAAACGCC4E
NQANANMhAAAAAIYIPgQ6AA4A6iEAAAAAhghVBDUADwD0IQAAAACGCF8EOgAQAAsiAAAAAIYIcAQ1
ABEAFSIAAAAAhgh5BDoAEgAsIgAAAACGCIkENQATADYiAAAAAIYImQQ6ABQATSIAAAAAhgiwBD8A
FQBcIgAAAACGCL4EOgAWAHMiAAAAAIYA0wREABcAeyIAAAAAhgDaBEQAFwCDIgAAAACGAOMCIQAX
AIsiAAAAAIYYwwETABcAliIAAAAAhgiwBD8AGgClIgAAAACGCL4EOgAbALwiAAAAAIYI6QQ/ABwA
yyIAAAAAhgj7BDoAHQDiIgAAAACGCBQFNQAeAOwiAAAAAIYIIAU6AB8AAyMAAAAAhggzBT8AIAAS
IwAAAACGCEMFOgAhACkjAAAAAIYA0wREACIAMSMAAAAAhgDaBEQAIgA5IwAAAACGAOMCIQAiAEEj
AAAAAIYYwwFEACIAZCMAAAAAxgDCBVsAIgC/IwAAAADGAc8FRAAmAMEjAAAAAIEA3QVEACYA+CMA
AAAAxgDxBWUAJgBrJAAAAADGAf0FRAAqAG0kAAAAAMYBEQZxACoAgCQAAAAAxgElBnEAKwCCJAAA
AACGGMMBewAsAJEkAAAAAIYYwwF7AC0AoCQAAAAAxgBaBkQALgCoJAAAAADGAGUGRAAuALAkAAAA
AMYAEQZxAC4ABCUAAAAAxgAlBnEALwBwJwAAAACGGMMBRAAwAIMnAAAAAIMYwwFEADAAjCcAAAAA
kwjPBowAMADFJwAAAACTCOMGkQAwAMwnAAAAAJMI7waWADAA1CcAAAAAlggTB6oAMQDnJwAAAACG
GMMBRAAxANsnAAAAAJEYnAx3ATEAAAABACcHAAACAC4HAAADAEIHAAABACcHAAACAC4HAAADAEIH
AAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAAB
AEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABACcHAAACAC4HAAADAEIH
AAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAEwHAAABAFIHAAAC
AFoHAAADACcHAAAEAEIHAAABAGQHAAACAGwHAAADAHYHAAAEAEIHAAABACcHAAABAH4HAAABAIIH
AAABAIIHAAABACcHAAABAH4HAAABAEwHSQDDATUAUQDDATUAWQDDATUAYQDDATUAaQDDATUAcQDD
ATUAeQDDATUAgQDDATUAiQDDATUAkQDDATUAmQDDAT8AoQDDAUQACQDDARMACQAnB7QACQAuB7gA
KQBHCbwACQBRCcEAKQBYCcYACQDbAiEACQDjAiEACQBhCcsACQBqCT8AqQDDATUACQDTBEQACQDa
BEQAEQDDAUQAuQCqCdEAEQCxCdgAKQDCCSEAEQDSCd4AGQDDAUQAyQDDAUQAEQBaBkQAEQBlBkQA
EQBrCu4A0QCBCh0A2QDDAT8AuQCkCvMA4QCzCvgA2QDDCv0AuQDKCiUAGQDVCh0A6QADCwMB8QDD
AT8A8QAmCwoB8QAyCw8B8QBhCRQB8QA7CxQB8QBVCxoBAQFvCx8BCQGLCx8BCQGTCx8BAQGdCyEA
EQGyC0QA0QC6CyMBIQHDAUQAKQEVDEsBKQEwDFQBOQDDAVoBQQHDAWcBUQHDAUQAIQDDAUQALgAb
APMBLgBjADECLgALAHsBLgATAMMBLgAjAPMBLgArAPkBLgAzAMMBLgA7AAgCLgBDAPMBLgBbACgC
AwEDAekAIwHDAekAYQHrAekAKQXjAW4BSQXjAW4B5QAuAWIBAgABAAMAEQAEACEACQApAAoAKwAA
AO8CKQAAAPkCLQAAAAoDKQAAABMDLQAAACMDKQAAADADLQAAAEQDKQAAAFADLQAAAGMDKQAAAGkD
LQAAAHYDKQAAAHsDLQAAAIcDKQAAAJMDLQAAAKYDMQAAALADLQAAAO8CKQAAAPkCLQAAAAoDKQAA
ABMDLQAAACMDKQAAADADLQAAAEQDKQAAAFADLQAAAGMDKQAAAGkDLQAAAHYDKQAAAHsDLQAAAIcD
KQAAAJMDLQAAAKYDMQAAALADLQAAAKYDMQAAALADLQAAAFoFMQAAAGgFLQAAAH0FKQAAAIUFLQAA
AJQFMQAAAKAFLQAAAIIGnAAAAPsGoQAAAB8HrwACAAIAAwACAAMABQACAAQABwACAAUACQACAAYA
CwACAAcADQACAAgADwACAAkAEQACAAoAEwACAAsAFQACAAwAFwACAA0AGQACAA4AGwACAA8AHQAC
ABAAHwACABEAIQABABUAIwABABYAJQABABcAJwABABgAKQABABkAKwABABoALQABABsALwABABwA
MQABAB0AMwABAB4ANQABAB8ANwABACAAOQABACEAOwABACIAPQABACMAPwABACQAQQABACkAQwAB
ACoARQABACsARwABACwASQABAC0ASwABAC4ATQABAC8ATwABADAAUQACAEQAUwACAEUAVQABAEYA
VQACAEcAVwAEgAAAAQAAAAASIo8AAAAAAAAcCQAACwAAAAAAAAAAAAAAAQDmAAAAAAAEAAAAAAAA
AAAAAAAKAEEBAAAAAAQAAAAAAAAAAAAAAAoASgEAAAAACwAAAAAAAAAAAAAAAQCFAQAAAAALAAAA
AAAAAAAAAAABAAUKAAAAAAAAAAABAAAAowwAAAAAADxNb2R1bGU+AFNDXzhkYjIxNTgwNDM3NTQ5
ZTE5OTg0ZTIzNDg2ZTk1YzQ1LmNzcHJvai5kbGwASW5wdXQwQnVmZmVyAFJzc0ZlZWRPdXRwdXRC
dWZmZXIAS2V5d29yZE91dHB1dEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlh
YmxlcwBTY3JpcHRNYWluAFJlc291cmNlcwBTQ184ZGIyMTU4MDQzNzU0OWUxOTk4NGUyMzQ4NmU5
NWM0NS5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRD
b21wb25lbnQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBl
bGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAC5jdG9yAGdldF9GZWVkVGl0bGUAZ2V0X0ZlZWRUaXRs
ZV9Jc051bGwAZ2V0X0ZlZWRMaW5rAGdldF9GZWVkTGlua19Jc051bGwAZ2V0X0ZlZWRMYW5ndWFn
ZQBnZXRfRmVlZExhbmd1YWdlX0lzTnVsbABnZXRfRmVlZFB1YkRhdGUAZ2V0X0ZlZWRQdWJEYXRl
X0lzTnVsbABnZXRfVGl0bGUAZ2V0X1RpdGxlX0lzTnVsbABnZXRfTGluawBnZXRfTGlua19Jc051
bGwAZ2V0X0Rlc2NyaXB0aW9uAGdldF9EZXNjcmlwdGlvbl9Jc051bGwAZ2V0X1Jvd051bWJlcgBn
ZXRfUm93TnVtYmVyX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AEZlZWRUaXRsZQBGZWVkVGl0
bGVfSXNOdWxsAEZlZWRMaW5rAEZlZWRMaW5rX0lzTnVsbABGZWVkTGFuZ3VhZ2UARmVlZExhbmd1
YWdlX0lzTnVsbABGZWVkUHViRGF0ZQBGZWVkUHViRGF0ZV9Jc051bGwAVGl0bGUAVGl0bGVfSXNO
dWxsAExpbmsATGlua19Jc051bGwARGVzY3JpcHRpb24ARGVzY3JpcHRpb25fSXNOdWxsAFJvd051
bWJlcgBSb3dOdW1iZXJfSXNOdWxsAHNldF9GZWVkVGl0bGUAc2V0X0ZlZWRUaXRsZV9Jc051bGwA
c2V0X0ZlZWRMaW5rAHNldF9GZWVkTGlua19Jc051bGwAc2V0X0ZlZWRMYW5ndWFnZQBzZXRfRmVl
ZExhbmd1YWdlX0lzTnVsbABzZXRfRmVlZFB1YkRhdGUAc2V0X0ZlZWRQdWJEYXRlX0lzTnVsbABz
ZXRfVGl0bGUAc2V0X1RpdGxlX0lzTnVsbABzZXRfTGluawBzZXRfTGlua19Jc051bGwAc2V0X0Rl
c2NyaXB0aW9uAHNldF9EZXNjcmlwdGlvbl9Jc051bGwAc2V0X1Jvd051bWJlcgBzZXRfUm93TnVt
YmVyX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAc2V0X0tleVdvcmROdW1iZXIAc2V0X0tl
eVdvcmROdW1iZXJfSXNOdWxsAHNldF9LZXlXb3JkAHNldF9LZXlXb3JkX0lzTnVsbABzZXRfT2Nj
dXJyZW5jZXMAc2V0X09jY3VycmVuY2VzX0lzTnVsbABLZXlXb3JkTnVtYmVyAEtleVdvcmROdW1i
ZXJfSXNOdWxsAEtleVdvcmQAS2V5V29yZF9Jc051bGwAT2NjdXJyZW5jZXMAT2NjdXJyZW5jZXNf
SXNOdWxsAElucHV0c0ZpbmlzaGVkAFByb2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRw
dXRzRmluaXNoZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vz
c0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9uZW50AENvbXBvbmVudE5h
bWUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZlcgBCdWZmZXJDb2x1bW5J
bmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0TmFtZQBPdXRwdXRzAE91dHB1dElE
cwBCdWZmZXJzAFJvdwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2Vt
Ymx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzhkYjIxNTgwNDM3NTQ5ZTE5OTg0ZTIzNDg2ZTk1
YzQ1LmNzcHJvagBHZXRTdHJpbmcASXNOdWxsAEdldEludDMyAHNldF9JdGVtAFNldE51bGwASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBJbnQzMgBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVh
bHMAR2V0Q29sdW1uSW5kZXhlcwBnZXRfRW5kT2ZSb3dzZXQAR2V0T3V0cHV0SUQAU1NJU1Njcmlw
dENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29t
cG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAGdldF9OYW1lAFN5c3RlbS5U
ZXh0AFN0cmluZ0J1aWxkZXIAZ2V0X0NoYXJzAENoYXIASXNMZXR0ZXJPckRpZ2l0AEFwcGVuZABn
ZXRfTGVuZ3RoAFRvU3RyaW5nAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdleABT
cGxpdABTeXN0ZW0uQ29sbGVjdGlvbnMASGFzaHRhYmxlAENvbnRhaW5zS2V5AGdldF9JdGVtAEFk
ZABJRGljdGlvbmFyeUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBJRW51bWVyYXRvcgBnZXRfQ3Vy
cmVudABEaWN0aW9uYXJ5RW50cnkAZ2V0X0tleQBnZXRfVmFsdWUATW92ZU5leHQASURpc3Bvc2Fi
bGUARGlzcG9zZQBGaXJlRXJyb3IARXhjZXB0aW9uAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUALmNjdG9yAFNDXzhkYjIxNTgwNDM3NTQ5ZTE5OTg0ZTIzNDg2ZTk1YzQ1LmNzcHJv
ai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAICbSQBzAE4AdQBsAGwAIABwAHIA
bwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBl
AC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUA
bQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAG1IAcwBzAEYAZQBlAGQATwB1
AHQAcAB1AHQAABtLAGUAeQB3AG8AcgBkAE8AdQB0AHAAdQB0AAADIAAAAQB/UwBDAF8AOABkAGIA
MgAxADUAOAAwADQAMwA3ADUANAA5AGUAMQA5ADkAOAA0AGUAMgAzADQAOAA2AGUAOQA1AGMANAA1
AC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AOTP4CcdsEBGghADOY2hbdkACImEXc2AgMyRCLd6XFYZNOCJCSADARIVHQgSGQMgAA4DIAACAyAA
CAMoAA4DKAACAygACAQgAQEOBCABAQIEIAEBCAMgAAEDBhIYAwYSHAMGEgwDBhIQAgYICSAEAQgO
EhUSGQsgBAEIHQgdEhUSGQUgAQESCAMGEgkFIAEBEgkCBg4DBhIdAwYSIQQAABIdBAAAEiEFAAEB
EiEECAASHQQIABIhAwYSKAQAABIoBAgAEigDBhIVAwYdCAQgAQ4IBCABAggEIAEICAUgAgEIHAYg
AgIOEWEFIAEdCAgGAAIIEhkOAwcBCAQBAAAABCAAEmkEIAEDCAQAAQIDBSABEm0DBgACHQ4ODgQg
AQIcBCABHBwFIAIBHBwEIAASfQMgABwKIAYBCA4ODggQAhwHDwISbQMdDggSeQ4RgIUSgI0OCB0O
CBJ9EoCJCAABEoCVEYCZBSAAEoCdByACAQ4SgJ0EBwESHQYgAQERgKUIAQACAAAAAAADAAABRwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0LwEAKlNDXzhkYjIxNTgwNDM3NTQ5ZTE5OTg0ZTIzNDg2ZTk1YzQ1LmNzcHJv
agAABQEAAAAADgEACU1pY3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDExAAAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBuEUAAAAAAAAAAAAAzkUAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBFAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAA4
BAAAAAAAAAAAAAA4BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAIo8AEgAAAQAijwASPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
mAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAdAMAAAEAMAAwADAAMAAwADQAYgAw
AAAANAAKAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYAdAAAAIAA
KwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA4AGQAYgAyADEANQA4
ADAANAAzADcANQA0ADkAZQAxADkAOQA4ADQAZQAyADMANAA4ADYAZQA5ADUAYwA0ADUALgBjAHMA
cAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADQANgAw
ADgALgAzADYANgA0ADIAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
OABkAGIAMgAxADUAOAAwADQAMwA3ADUANAA5AGUAMQA5ADkAOAA0AGUAMgAzADQAOAA2AGUAOQA1
AGMANAA1AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAy
ADAAMQAxAAAAAACIAC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8A
OABkAGIAMgAxADUAOAAwADQAMwA3ADUANAA5AGUAMQA5ADkAOAA0AGUAMgAzADQAOAA2AGUAOQA1
AGMANAA1AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAEMAXwA4AGQAYgAyADEANQA4ADAANAAzADcANQA0ADkAZQAxADkAOQA4ADQAZQAy
ADMANAA4ADYAZQA5ADUAYwA0ADUALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMA
dABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADYAMAA4AC4AMwA2ADYANAAyAAAAAABIAA8AAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADYAMAA4AC4AMwA2ADYA
NAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA4DUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8db21580437549e19984e23486e95c45</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">6ddc7c9f9834bdec7675b9a3e02708d6</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[FeedTitle]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedTitle"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedTitle]"
                      name="FeedTitle" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[FeedLink]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedLink"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLink]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[FeedLanguage]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedLanguage"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLanguage]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[FeedPubDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="FeedPubDate"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedPubDate]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[Title]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="Title"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Title]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[Link]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="200"
                      cachedName="Link"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Link]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[Description]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="2000"
                      cachedName="Description"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Description]" />
                    <inputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0].Columns[RowNumber]"
                      cachedDataType="i4"
                      cachedName="RowNumber"
                      lineageId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0].Columns[RowNumber]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput]"
                  hasSideEffects="true"
                  name="RssFeedOutput">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedTitle]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedTitle]"
                      name="FeedTitle" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedLink]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedLink]"
                      name="FeedLink" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedLanguage]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedLanguage]"
                      name="FeedLanguage" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedPubDate]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[FeedPubDate]"
                      name="FeedPubDate" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Link]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Link]"
                      name="Link" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Description]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[RowNumber]"
                      dataType="i4"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput].Columns[RowNumber]"
                      name="RowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput]"
                  hasSideEffects="true"
                  name="KeywordOutput">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[RowNumber]"
                      dataType="i4"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[RowNumber]"
                      name="RowNumber" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[KeyWordNumber]"
                      dataType="i4"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[KeyWordNumber]"
                      name="KeyWordNumber" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[KeyWord]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[KeyWord]"
                      name="KeyWord" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[Occurrences]"
                      dataType="i4"
                      lineageId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput].Columns[Occurrences]"
                      name="Occurrences" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - RSS Feed.Paths[KeywordOutput]"
              endId="Package\DFT - RSS Feed\SCR - Feed HTML 2.Inputs[Input 0]"
              name="KeywordOutput"
              startId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[KeywordOutput]" />
            <path
              refId="Package\DFT - RSS Feed.Paths[Output 01]"
              endId="Package\DFT - RSS Feed\SCR - Number Rows.Inputs[Input 0]"
              name="Output 0"
              startId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0]" />
            <path
              refId="Package\DFT - RSS Feed.Paths[Output 0]"
              endId="Package\DFT - RSS Feed\SCR - Parse Words.Inputs[Input 0]"
              name="Output 0"
              startId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0]" />
            <path
              refId="Package\DFT - RSS Feed.Paths[RssFeedOutput]"
              endId="Package\DFT - RSS Feed\SCR - Feed HTML.Inputs[Input 0]"
              name="RssFeedOutput"
              startId="Package\DFT - RSS Feed\SCR - Parse Words.Outputs[RssFeedOutput]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="152,52"
          Id="Package\DFT - RSS Feed"
          TopLeft="220,138" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DFT - RSS Feed">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\SCR - Feed HTML 2"
          TopLeft="229,364" />
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\SCR - Number Rows"
          TopLeft="110.083333333333,144" />
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\SCR - Get RSS Feed Data"
          TopLeft="110.083333333333,45" />
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\SCR - Feed HTML"
          TopLeft="12.5,365.5" />
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\SCR - Parse Words"
          TopLeft="110.083333333333,240" />
        <EdgeLayout
          Id="Package\DFT - RSS Feed.Paths[Output 0]"
          TopLeft="192.011666666666,202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - RSS Feed.Paths[Output 01]"
          TopLeft="192.011666666667,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - RSS Feed.Paths[KeywordOutput]"
          TopLeft="217.987777777778,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92.9405555555559,66"
              Start="0,0"
              End="92.9405555555559,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.782940145456" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.782940145456"
                    Point2="0,26.782940145456"
                    Point3="4,26.782940145456" />
                  <mssgle:LineSegment
                    End="88.9405555555559,26.782940145456" />
                  <mssgle:CubicBezierSegment
                    Point1="88.9405555555559,26.782940145456"
                    Point2="92.9405555555559,26.782940145456"
                    Point3="92.9405555555559,30.782940145456" />
                  <mssgle:LineSegment
                    End="92.9405555555559,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="12.5688910590279,31.782940145456,67.8027734375,9.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - RSS Feed.Paths[RssFeedOutput]"
          TopLeft="166.035555555555,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-71.6072222222219,67.5"
              Start="0,0"
              End="-71.6072222222219,60">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.39164333058" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.39164333058"
                    Point2="0,27.39164333058"
                    Point3="-4,27.39164333058" />
                  <mssgle:LineSegment
                    End="-67.6072222222219,27.39164333058" />
                  <mssgle:CubicBezierSegment
                    Point1="-67.6072222222219,27.39164333058"
                    Point2="-71.6072222222219,27.39164333058"
                    Point3="-71.6072222222219,31.39164333058" />
                  <mssgle:LineSegment
                    End="-71.6072222222219,60" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-68.8499978298609,32.39164333058,66.0927734375,9.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>