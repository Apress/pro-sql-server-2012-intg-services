<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/22/2011 8:10:35 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SQL11"
  DTS:CreatorName="SQL11\Admin"
  DTS:DTSID="{B590C6FE-35AC-4A91-A503-CB95B7709344}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="CH10_Apress_Script_Comp_Transform_Sync"
  DTS:PackageType="5"
  DTS:VersionBuild="34"
  DTS:VersionGUID="{71FFD21C-2CE9-458A-9E8A-D2E66AFC0AE5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DFT - RSS Feed"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{14AE172E-57BD-4D48-ABDB-672B14A4ED66}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - RSS Feed"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{C1360850-D6D1-47AF-AC89-7913F7D76BE1}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="RowCount">
          <DTS:VariableValue
            DTS:DataType="3">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - RSS Feed\CNT - Count Rows"
              componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="CNT - Count Rows">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::RowCount</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - RSS Feed\CNT - Count Rows.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - RSS Feed\CNT - Count Rows.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\DFT - RSS Feed\CNT - Count Rows.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Get RSS Feed Data"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Net;
using System.IO;
using System.Text;
using System.Windows.Forms;
using System.Xml;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    // XML Document to hold RSS feed page
    XmlDocument RssXML = null;
    bool b = true;
    string ComponentName = "";

    public override void PreExecute()
    {
        // Get Name of Component
        ComponentName = this.ComponentMetaData.Name;

        // Fire OnInformation event for starting
        this.ComponentMetaData.FireInformation(-1, ComponentName, "Beginning Pre-execute", "", 0, ref b);

        // Perform base PreExecute() method
        base.PreExecute();

        try
        {
            // Fire OnInformation event for getting RSS feed data
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Start - Getting RSS Feed data (Pre-execute)", "", 0, ref b);

            // Retrieve RSS feed
            HttpWebRequest req = (HttpWebRequest)HttpWebRequest.Create("http://rss.cnn.com/rss/cnn_topstories.rss");
            HttpWebResponse res = (HttpWebResponse)req.GetResponse();
            Stream str = res.GetResponseStream();

            // Put RSS feed document into XML Document
            RssXML = new XmlDocument();
            RssXML.Load(str);

            // Fire OnInformation event for getting RSS feed data
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Complete - Getting RSS Feed data (Pre-execute)", "", 0, ref b);
        }
        catch (Exception ex)
        {
            // Fire OnError event if an error occurs
            this.ComponentMetaData.FireInformation(-1, ComponentName, ex.ToString(), "", 0, ref b);

            // Rethrow exception to stop processing
            throw (ex);
        }
        finally
        {
            // Fire OnInformation event for finished
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Finished Pre-execute", "", 0, ref b);
        }
    }

    public override void PostExecute()
    {
        // Perform base PostExecute() method
        base.PostExecute();
    }

    public override void CreateNewOutputRows()
    {
        // Fire OnInformation event for starting
        this.ComponentMetaData.FireInformation(-1, ComponentName, "Start - Create new output rows", "", 0, ref b);

        try
        {
            // Get feed properties
            string feed_title = RssXML.SelectSingleNode("(/rss/channel/title)[1]").InnerText;
            string feed_link = RssXML.SelectSingleNode("(/rss/channel/link)[1]").InnerText;
            string feed_language = RssXML.SelectSingleNode("(/rss/channel/language)[1]").InnerText;
            string feed_pubDate = RssXML.SelectSingleNode("(/rss/channel/pubDate)[1]").InnerText;

            // Initialize counters and shred articles
            int CurrentRowCount = 0;
            int CurrentPercent = 0;
            int LastPercent = 0;
            XmlNodeList xl = RssXML.SelectNodes("/rss/channel/item");
            int TotalRows = xl.Count;

            // Iterate articles
            foreach (XmlNode xn in xl)
            {
                // Get article properties
                string title = xn.SelectSingleNode("(title)[1]").InnerText;
                string link = xn.SelectSingleNode("(link)[1]").InnerText;
                string description = xn.SelectSingleNode("(description)[1]").InnerText;

                // Create new output row
                Output0Buffer.AddRow();

                // Assign values to the output buffer columns
                Output0Buffer.FeedTitle = feed_title;
                Output0Buffer.FeedLink = feed_link;
                Output0Buffer.FeedLanguage = feed_language;
                Output0Buffer.FeedPubDate = feed_pubDate;
                Output0Buffer.Title = title;
                Output0Buffer.Link = link;
                Output0Buffer.Description = description;

                // Increment row counter, log progress
                CurrentRowCount++;
                CurrentPercent = CurrentRowCount * 100 / TotalRows;

                // Log progress every time % changes
                if (LastPercent != CurrentPercent)
                {
                    // Fire OnProgress event
                    this.ComponentMetaData.FireProgress(string.Format("{0} of {1} rows processed.", CurrentRowCount, TotalRows),
                        CurrentPercent, CurrentRowCount, 0, ComponentName, ref b);

                    // Update % complete
                    LastPercent = CurrentPercent;
                }
            }
        }
        catch (Exception ex)
        {
            // Fire OnError event if an error occurs
            this.ComponentMetaData.FireInformation(-1, ComponentName, ex.ToString(), "", 0, ref b);
        }
        finally
        {
            // Perform base CreateNewOutputRows() method
            base.CreateNewOutputRows();

            // End of rows
            Output0Buffer.SetEndOfRowset();

            // Fire OnInformation event for starting
            this.ComponentMetaData.FireInformation(-1, ComponentName, "Complete - Create new output rows", "", 0, ref b);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FeedTitle
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FeedTitle_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedLink
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FeedLink_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedLanguage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FeedLanguage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeedPubDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool FeedPubDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Link
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Link_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_daae4df516fc425a87a49f09aab0c5dc.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_daae4df516fc425a87a49f09aab0c5dc.csproj")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_daae4df516fc425a87a49f09aab0c5dc.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_daae4df516fc425a87a49f09aab0c5dc.csproj</RootNamespace>
    <AssemblyName>SC_daae4df516fc425a87a49f09aab0c5dc.csproj</AssemblyName>
    <ProjectGuid>{E1646F46-9FF5-40D8-A26E-3B10F6ADF5C9}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{26689EB0-85DA-4450-9F61-58FD59D98D74}</msb:ProjectId>
		<msb:DisplayName>sc_daae4df516fc425a87a49f09aab0c5dc</msb:DisplayName>
		<msb:CodeName>sc_daae4df516fc425a87a49f09aab0c5dc</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_daae4df516fc425a87a49f09aab0c5dc.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Settings.get_Default():SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Sett" +
    "ings")]

namespace SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_daae4df516fc425a87a49f09aab0c5dc.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_daae4df516fc425a87a49f09aab0c5dc.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANKpKVAAAAAAAAAAAOAAAiELAQgAACIAAAAIAAAAAAAAfkAA
AAAgAAAAYAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACxAAABPAAAAAGAAAJAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJAEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
QAAAAAAAAEgAAAACAAUAECcAABwZAAABAAAAAAAAAFgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqJgIWAygOAAAKKloDLAgCFigPAAAKKnIB
AABwcxAAAAp6JgIXAygOAAAKKloDLAgCFygPAAAKKnIBAABwcxAAAAp6JgIYAygOAAAKKloDLAgC
GCgPAAAKKnIBAABwcxAAAAp6JgIZAygOAAAKKloDLAgCGSgPAAAKKnIBAABwcxAAAAp6JgIaAygO
AAAKKloDLAgCGigPAAAKKnIBAABwcxAAAAp6JgIbAygOAAAKKloDLAgCGygPAAAKKnIBAABwcxAA
AAp6JgIcAygOAAAKKloDLAgCHCgPAAAKKnIBAABwcxAAAAp6HgIoEQAACioeAigSAAAKKh4CKBMA
AAoqfgIoFAAACgICcxgAAAZ9AQAABAICcxkAAAZ9AgAABCoGKm4CewMAAAQsEgJ7AwAABG8RAAAG
AhR9AwAABCoTMAUASQAAAAEAABEWCisuBAaUDgRyngAAcCgVAAAKMxkCBQaaAgQGlCgWAAAKDgRz
AQAABn0DAAAEBhdYCgYDMs4CbxcAAAYCbxQAAAYCKBUAAAYqBio6AigXAAAKAgN9BAAABCo6AigX
AAAKAgN9BQAABCoAAAAbMAcACgEAAAIAABECAigZAAAKbxoAAAp9CAAABAIoGQAAChUCewgAAARy
sAAAcHLcAABwFgJ8BwAABG8bAAAKAigcAAAKAigZAAAKFQJ7CAAABHLeAABwctwAAHAWAnwHAAAE
bxsAAApyNgEAcCgdAAAKdBoAAAEKBm8eAAAKdBwAAAELB28fAAAKDAJzIAAACn0GAAAEAnsGAAAE
CG8hAAAKAigZAAAKFQJ7CAAABHKKAQBwctwAAHAWAnwHAAAEbxsAAAreJw0CKBkAAAoVAnsIAAAE
CW8iAAAKctwAAHAWAnwHAAAEbxsAAAoJet4kAigZAAAKFQJ7CAAABHLoAQBwctwAAHAWAnwHAAAE
bxsAAArcKgAAARwAAAAAOgCCvAAnHgAAAQIAOgCr5QAkAAAAAB4CKCMAAAoqGzAHACoCAAADAAAR
AigZAAAKFQJ7CAAABHISAgBwctwAAHAWAnwHAAAEbxsAAAoCewYAAARyUAIAcG8kAAAKbyUAAAoK
AnsGAAAEcoACAHBvJAAACm8lAAAKCwJ7BgAABHKuAgBwbyQAAApvJQAACgwCewYAAARy5AIAcG8k
AAAKbyUAAAoNFhMEFhMFFhMGAnsGAAAEchgDAHBvJgAAChMHEQdvJwAAChMIEQdvKAAAChMOOPcA
AAARDm8pAAAKdB8AAAETCREJcjwDAHBvJAAACm8lAAAKEwoRCXJSAwBwbyQAAApvJQAAChMLEQly
ZgMAcG8kAAAKbyUAAAoTDAJ7AwAABG8QAAAGAnsDAAAEBm8CAAAGAnsDAAAEB28EAAAGAnsDAAAE
CG8GAAAGAnsDAAAECW8IAAAGAnsDAAAEEQpvCgAABgJ7AwAABBELbwwAAAYCewMAAAQRDG8OAAAG
EQQXWBMEEQQfZFoRCFsTBREGEQUuOAIoGQAACnKIAwBwEQSMIgAAAREIjCIAAAEoKgAAChEFEQQW
AnsIAAAEAnwHAAAEbysAAAoRBRMGEQ5vLAAACjr9/v//3hURDnUkAAABEw8RDywHEQ9vLQAACtze
KRMNAigZAAAKFQJ7CAAABBENbyIAAApy3AAAcBYCfAcAAARvGwAACt4A3jUCKBcAAAYCewMAAARv
EQAABgIoGQAAChUCewgAAARyvgMAcHLcAABwFgJ8BwAABG8bAAAK3CoAAEFMAAACAAAAqAAAAAoB
AACyAQAAFQAAAAAAAAAAAAAAIwAAAKYBAADJAQAAKQAAAB4AAAECAAAAIwAAANEBAAD0AQAANQAA
AAAAAABmAhd9BwAABAJy3AAAcH0IAAAEAigTAAAGKh4CKBcAAAoqAAATMAMALQAAAAQAABF+CQAA
BC0gcgIEAHDQBwAAAigvAAAKbzAAAApzMQAACgoGgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoa
fgsAAAQqLnMjAAAGgAsAAAQqHgIoNAAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAALAHAAAjfgAAHAgAADQKAAAjU3RyaW5ncwAAAABQEgAAhAQAACNV
UwDUFgAAEAAAACNHVUlEAAAA5BYAADgCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+iUzABYA
AAEAAAArAAAACAAAAAsAAAAkAAAAGAAAADQAAAAPAAAABAAAAAMAAAARAAAAEgAAAAEAAAAGAAAA
AQAAAAAACgABAAAAAAAGAP0A3AAGAAoB3AAKACoBIwEOAEYBMQESAH8B3AAGAI4B3AAWAMcDvAMK
ABIEAQQKAEMELgQKACAFBgUKAEsFOQUKAGIFOQUKAH8FOQUKAJ4FOQUKALcFOQUKANAFOQUKAOsF
OQUKAAYGOQUKAB8GOQUKAFgGOAYKAHgGOAYKANIGIwEGAAkH3AAaAH0HVAcOANAHxQcOAOIHxQcO
APEHxQcOAAkIxQcKACMIGQgKAEoIIwEWAFQIvAMWAHsIvAMKALAInQgKANYIIwEKANwIIwEKAAAJ
IwEKACcJFAkKAEQJIwEKAEkJIwEKAG0JOQUOAJkJgwkOALIJgwkKAMcJOAYAAAAAAQAAAAAAAQAB
AAEAEAA5AAAABQABAAEAAQAQAEcAAAAJAAEAEwABABAAVQAAAA0ABAAYAAEAEABhAAAADQAFABkA
AQAQAGsAAAAMAAYAGgAAABAAdgCAAA0ACQAeAAABEAC2AIAAEQALACIABgBVADcABgBhADsABgA5
AD8AAQCsA08AAQCsA08AAQDTA1kAAQDaA10AAQDcA2AAEQAiBGMAEQBPBGcAEQCTBIUAUCAAAAAA
hhicARMAAQBbIAAAAACGCKIBHQAEAGUgAAAAAIYIsAEiAAUAfCAAAAAAhgjFAR0ABgCGIAAAAACG
CNIBIgAHAJ0gAAAAAIYI5gEdAAgApyAAAAAAhgj3ASIACQC+IAAAAACGCA8CHQAKAMggAAAAAIYI
HwIiAAsA3yAAAAAAhgg2Ah0ADADpIAAAAACGCEACIgANAAAhAAAAAIYIUQIdAA4ACiEAAAAAhgha
AiIADwAhIQAAAACGCGoCHQAQACshAAAAAIYIegIiABEAQiEAAAAAhgCRAicAEgBKIQAAAACGAJgC
JwASAFIhAAAAAIYApwIrABIAWiEAAAAAhhicAScAEgB6IQAAAADGAWoDJwASAHwhAAAAAIEAeAMn
ABIAmCEAAAAAxgCMA0MAEgDtIQAAAADGAZgDJwAWAO8hAAAAAIYYnAFTABYA/iEAAAAAhhicAVMA
FwAQIgAAAADGAOoDJwAYAEQjAAAAAMYA9QMnABgATCMAAAAAxgCYAycAGADQJQAAAACGGJwBJwAY
AOolAAAAAIMYnAEnABgA9CUAAAAAkwhfBGsAGAAtJgAAAACTCHMEcAAYADQmAAAAAJMIfwR1ABgA
PCYAAAAAlgijBIkAGQBPJgAAAACGGJwBJwAZAEMmAAAAAJEY4gldARkAAAABALcEAAACAL4EAAAD
ANIEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABANwE
AAABANwEAAABANwEAAABANwEAAABANwEAAABANwEAAABAOIEAAACAOoEAAADAPQEAAAEANIEAAAB
APwEAAABAPwEAAABANwEUQCcAR0AWQCcAR0AYQCcAR0AaQCcAR0AcQCcAR0AeQCcAR0AgQCcAR0A
iQCcAR0AkQCcAR0AmQCcAR0AoQCcAZMAqQCcAScACQCcARMACQDBBpgACQDKBpMAsQCcAR0ACQCR
AicACQCYAicACQCnAisAEQCcAScAEQDsBp4AEQD4BqUAGQCcAScAuQCcAScAEQCWB7QAwQCsB7kA
wQC1B70AEQDqAycAyQDbB8gAyQD9B84A2QAqCNMAOQCcAScAOQA8CNgAGQBBCLkAEQD1AycA+QBc
COkA+QBtCLkA+QCHCO8AAQGTCPYAAQG8CPoACQHKCAABGQHjCAQBwQDqCAsBCQH3CCsAIQEMCScA
KQGcAScAMQFbCTEBMQF2CToBQQCcAUABSQGcAU0BWQGcAScAIQCcAScALgAbANkBLgBjABcCLgAL
AGEBLgATAKkBLgAjANkBLgArAN8BLgAzAKkBLgA7AO4BLgBDANkBLgBbAA4CwwDDAK8A4wBzAa8A
YQGbAa8A6QGTAVQBCQKTAVQBqwDeABYBSAECAAEABwAPAAgAEQAAALMCLwAAAL0CMwAAAM4CLwAA
ANcCMwAAAOcCLwAAAPQCMwAAAAgDLwAAABQDMwAAACcDLwAAAC0DMwAAADoDLwAAAD8DMwAAAEsD
LwAAAFcDMwAAABIEewAAAIsEgAAAAK8EjgABAAIAAwABAAMABQABAAQABwABAAUACQABAAYACwAB
AAcADQABAAgADwABAAkAEQABAAoAEwABAAsAFQABAAwAFwABAA0AGQABAA4AGwABAA8AHQACAB8A
HwACACAAIQABACEAIQACACIAIwAEgAAAAQAAAAASAZAAAAAAAACWBgAACwAAAAAAAAAAAAAAAQC/
AAAAAAAEAAAAAAAAAAAAAAAKABoBAAAAAAQAAAAAAAAAAAAAAAoAIwEAAAAACwAAAAAAAAAAAAAA
AQBeAQAAAAAEAAAAAAAAAAAAAAAKALwDAAAAAAsAAAAAAAAAAAAAAAEAMAcAAAAAAAAAAAEAAADp
CQAAAAAAAAA8TW9kdWxlPgBTQ19kYWFlNGRmNTE2ZmM0MjVhODdhNDlmMDlhYWIwYzVkYy5jc3By
b2ouZGxsAE91dHB1dDBCdWZmZXIAVXNlckNvbXBvbmVudABDb25uZWN0aW9ucwBWYXJpYWJsZXMA
U2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfZGFhZTRkZjUxNmZjNDI1YTg3YTQ5ZjA5YWFiMGM1ZGMu
Y3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRCdWZmZXIAU2NyaXB0Q29tcG9u
ZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVC
dWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBzZXRfRmVlZFRpdGxlAHNldF9GZWVkVGl0bGVfSXNO
dWxsAHNldF9GZWVkTGluawBzZXRfRmVlZExpbmtfSXNOdWxsAHNldF9GZWVkTGFuZ3VhZ2UAc2V0
X0ZlZWRMYW5ndWFnZV9Jc051bGwAc2V0X0ZlZWRQdWJEYXRlAHNldF9GZWVkUHViRGF0ZV9Jc051
bGwAc2V0X1RpdGxlAHNldF9UaXRsZV9Jc051bGwAc2V0X0xpbmsAc2V0X0xpbmtfSXNOdWxsAHNl
dF9EZXNjcmlwdGlvbgBzZXRfRGVzY3JpcHRpb25fSXNOdWxsAEFkZFJvdwBTZXRFbmRPZlJvd3Nl
dABFbmRPZlJvd3NldABGZWVkVGl0bGUARmVlZFRpdGxlX0lzTnVsbABGZWVkTGluawBGZWVkTGlu
a19Jc051bGwARmVlZExhbmd1YWdlAEZlZWRMYW5ndWFnZV9Jc051bGwARmVlZFB1YkRhdGUARmVl
ZFB1YkRhdGVfSXNOdWxsAFRpdGxlAFRpdGxlX0lzTnVsbABMaW5rAExpbmtfSXNOdWxsAERlc2Ny
aXB0aW9uAERlc2NyaXB0aW9uX0lzTnVsbABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNo
ZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBQYXJlbnRDb21wb25lbnQAU3lzdGVt
LlhtbABYbWxEb2N1bWVudABSc3NYTUwAYgBDb21wb25lbnROYW1lAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBPdXRwdXRNYXAAdmFs
dWUAT3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1
dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDX2RhYWU0ZGY1MTZmYzQy
NWE4N2E0OWYwOWFhYjBjNWRjLmNzcHJvagBzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24AR2V0T3V0cHV0SUQAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9u
ZW50RW50cnlQb2ludEF0dHJpYnV0ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3Jh
cABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElEVFNDb21wb25lbnRN
ZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEAZ2V0X05hbWUARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5OZXQAV2ViUmVxdWVzdABDcmVhdGUASHR0cFdlYlJlcXVlc3QAV2ViUmVzcG9uc2UA
R2V0UmVzcG9uc2UASHR0cFdlYlJlc3BvbnNlAFN5c3RlbS5JTwBTdHJlYW0AR2V0UmVzcG9uc2VT
dHJlYW0ATG9hZABUb1N0cmluZwBFeGNlcHRpb24AWG1sTm9kZQBTZWxlY3RTaW5nbGVOb2RlAGdl
dF9Jbm5lclRleHQAWG1sTm9kZUxpc3QAU2VsZWN0Tm9kZXMAZ2V0X0NvdW50AFN5c3RlbS5Db2xs
ZWN0aW9ucwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AEludDMyAFN0cmlu
ZwBGb3JtYXQARmlyZVByb2dyZXNzAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAU3lzdGVt
LkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfZGFhZTRkZjUxNmZjNDI1YTg3
YTQ5ZjA5YWFiMGM1ZGMuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAw
AAArQgBlAGcAaQBuAG4AaQBuAGcAIABQAHIAZQAtAGUAeABlAGMAdQB0AGUAAQEAV1MAdABhAHIA
dAAgAC0AIABHAGUAdAB0AGkAbgBnACAAUgBTAFMAIABGAGUAZQBkACAAZABhAHQAYQAgACgAUABy
AGUALQBlAHgAZQBjAHUAdABlACkAAVNoAHQAdABwADoALwAvAHIAcwBzAC4AYwBuAG4ALgBjAG8A
bQAvAHIAcwBzAC8AYwBuAG4AXwB0AG8AcABzAHQAbwByAGkAZQBzAC4AcgBzAHMAAF1DAG8AbQBw
AGwAZQB0AGUAIAAtACAARwBlAHQAdABpAG4AZwAgAFIAUwBTACAARgBlAGUAZAAgAGQAYQB0AGEA
IAAoAFAAcgBlAC0AZQB4AGUAYwB1AHQAZQApAAEpRgBpAG4AaQBzAGgAZQBkACAAUAByAGUALQBl
AHgAZQBjAHUAdABlAAE9UwB0AGEAcgB0ACAALQAgAEMAcgBlAGEAdABlACAAbgBlAHcAIABvAHUA
dABwAHUAdAAgAHIAbwB3AHMAAS8oAC8AcgBzAHMALwBjAGgAYQBuAG4AZQBsAC8AdABpAHQAbABl
ACkAWwAxAF0AAC0oAC8AcgBzAHMALwBjAGgAYQBuAG4AZQBsAC8AbABpAG4AawApAFsAMQBdAAA1
KAAvAHIAcwBzAC8AYwBoAGEAbgBuAGUAbAAvAGwAYQBuAGcAdQBhAGcAZQApAFsAMQBdAAAzKAAv
AHIAcwBzAC8AYwBoAGEAbgBuAGUAbAAvAHAAdQBiAEQAYQB0AGUAKQBbADEAXQAAIy8AcgBzAHMA
LwBjAGgAYQBuAG4AZQBsAC8AaQB0AGUAbQAAFSgAdABpAHQAbABlACkAWwAxAF0AABMoAGwAaQBu
AGsAKQBbADEAXQAAISgAZABlAHMAYwByAGkAcAB0AGkAbwBuACkAWwAxAF0AADV7ADAAfQAgAG8A
ZgAgAHsAMQB9ACAAcgBvAHcAcwAgAHAAcgBvAGMAZQBzAHMAZQBkAC4AAENDAG8AbQBwAGwAZQB0
AGUAIAAtACAAQwByAGUAYQB0AGUAIABuAGUAdwAgAG8AdQB0AHAAdQB0ACAAcgBvAHcAcwABf1MA
QwBfAGQAYQBhAGUANABkAGYANQAxADYAZgBjADQAMgA1AGEAOAA3AGEANAA5AGYAMAA5AGEAYQBi
ADAAYwA1AGQAYwAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAAiRF8CGtURBn1TR4Hh0d70ACImEXc2AgMyRCLd6XFYZNOCJCSADARIVHQgS
GQQgAQEOBCABAQIDIAABAyAAAgMoAA4DKAACAwYSEAMGEhQDBhIICyAEAQgdCB0SFRIZAwYSCQUg
AQESCQMGEh0CBgICBg4DBhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYSIAQAABIg
BAgAEiAEIAEBCAUgAgEIHAYAAggSGQ4FIAEdCAgDBwEIBAEAAAAEIAASYQMgAA4KIAYBCA4ODggQ
AgUAARJlDgQgABJtBCAAEnUFIAEBEnUKBwQSaRJxEnUSeQUgARJ9DgYgARKAgQ4DIAAIBSAAEoCF
AyAAHAYAAw4OHBwKIAYBDggICA4QAhoHEA4ODg4ICAgSgIEIEn0ODg4SeRKAhRKAkQgAARKAmRGA
nQUgABKAoQcgAgEOEoChBAcBEiEGIAEBEYCpCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8B
ACpTQ19kYWFlNGRmNTE2ZmM0MjVhODdhNDlmMDlhYWIwYzVkYy5jc3Byb2oAAAUBAAAAAA4BAAlN
aWNyb3NvZnQAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQgMjAxMQAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAVEAAAAAAAAAAAAAAbkAAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAGBAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ADgEAAAAAAAAAAAAADgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQABkAASAAABAAGQABI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sASYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB0AwAAAQAwADAAMAAwADAANABi
ADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAA
gAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGQAYQBhAGUANABk
AGYANQAxADYAZgBjADQAMgA1AGEAOAA3AGEANAA5AGYAMAA5AGEAYQBiADAAYwA1AGQAYwAuAGMA
cwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANAA2
ADAAOAAuADMANgA4ADYANQAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMA
XwBkAGEAYQBlADQAZABmADUAMQA2AGYAYwA0ADIANQBhADgANwBhADQAOQBmADAAOQBhAGEAYgAw
AGMANQBkAGMALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABcABsAAQBMAGUAZwBhAGwAQwBvAHAA
eQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAg
ADIAMAAxADEAAAAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBkAGEAYQBlADQAZABmADUAMQA2AGYAYwA0ADIANQBhADgANwBhADQAOQBmADAAOQBhAGEAYgAw
AGMANQBkAGMALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAQwBfAGQAYQBhAGUANABkAGYANQAxADYAZgBjADQAMgA1AGEAOAA3AGEANAA5
AGYAMAA5AGEAYQBiADAAYwA1AGQAYwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUA
YwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADQANgAwADgALgAzADYAOAA2ADUAAAAAAEgADwAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADQANgAwADgALgAzADYA
OAA2ADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACAMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_daae4df516fc425a87a49f09aab0c5dc</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">a77a9e93b9d7d1377fcd167bb4f0de64</property>
              </properties>
              <outputs>
                <output
                  refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedTitle]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedTitle]"
                      name="FeedTitle" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLink]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLink]"
                      name="FeedLink" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLanguage]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedLanguage]"
                      name="FeedLanguage" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedPubDate]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[FeedPubDate]"
                      name="FeedPubDate" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Link]"
                      codePage="1252"
                      dataType="str"
                      length="200"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Link]"
                      name="Link" />
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Description]"
                      codePage="1252"
                      dataType="str"
                      length="2000"
                      lineageId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0].Columns[Description]"
                      name="Description" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - RSS Feed\SCR - Number Rows"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Number Rows"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    int row_number;

    public override void PreExecute()
    {
        // Execute base PreExecute() method
        base.PreExecute();
        
        // Initialize row number
        row_number = 1;
    }

    public override void PostExecute()
    {
        base.PostExecute();
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // Assign row_number to RowNumber column
        Row.RowNumber = row_number;

        // Increment row_number
        row_number++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 RowNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_68095bfdcf3e4f12848c69d6ef3233fe.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj</RootNamespace>
    <AssemblyName>SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj</AssemblyName>
    <ProjectGuid>{A1DFF2DA-8ECA-4B41-A6F9-A1A84F06911D}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{BE397821-6AA7-423F-A5C4-FD77829240BC}</msb:ProjectId>
		<msb:DisplayName>sc_68095bfdcf3e4f12848c69d6ef3233fe</msb:DisplayName>
		<msb:CodeName>sc_68095bfdcf3e4f12848c69d6ef3233fe</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_68095bfdcf3e4f12848c69d6ef3233fe.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Settings.get_Default():SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Sett" +
    "ings")]

namespace SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_68095bfdcf3e4f12848c69d6ef3233fe.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANypKVAAAAAAAAAAAOAAAiELAQgAABQAAAAIAAAAAAAA/jEA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKwxAABPAAAAAEAAAJAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
MQAAAAAAAEgAAAACAAUAaCIAAEQPAAABAAAAAAAAALAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqOgIWA4wVAAABKA4AAAoqWgMsCAIWKA8A
AAoqcgEAAHBzEAAACnoeAigRAAAKKh4CKBIAAAoqfgIoEwAACgICcwoAAAZ9AQAABAICcwsAAAZ9
AgAABCqSBHKeAABwGm8UAAAKLBUCBQIDKBUAAAoOBHMBAAAGbwgAAAYqSisHAgNvCQAABgNvBAAA
Bi3xKgYqOgIoFgAACgIDfQMAAAQqOgIoFgAACgIDfQQAAAQqOgIoGAAACgIXfQUAAAQqHgIoGQAA
CipuAwJ7BQAABG8CAAAGAiV7BQAABBdYfQUAAAQqHgIoBgAABioeAigWAAAKKhMwAwAtAAAAAQAA
EX4GAAAELSByrgAAcNAHAAACKBsAAApvHAAACnMdAAAKCgaABgAABH4GAAAEKhp+BwAABCoeAoAH
AAAEKhp+CAAABCoucxUAAAaACAAABCoeAiggAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAALAUAACN+AACYBQAAwAYAACNTdHJpbmdzAAAAAFgMAAAw
AQAAI1VTAIgNAAAQAAAAI0dVSUQAAACYDQAArAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6
JTMAFgAAAQAAACAAAAAIAAAACAAAABYAAAAPAAAAIAAAAA8AAAABAAAAAwAAAAUAAAAGAAAAAQAA
AAQAAAABAAAAAAAKAAEAAAAAAAYA/ADbAAYACQHbAAoAKQEiAQ4ARQEwARIAfgHbAAYAjQHbAAoA
bgJdAgoAnwKKAgoAeANeAwoAowORAwoAugORAwoA1wORAwoA9gORAwoADwSRAwoAKASRAwoAQwSR
AwoAXgSRAwoAdwSRAwoAsASQBAoA0ASQBAoAGQUiAQoAMAUiAQoASgUiAQoAUQUiAQYAegXbAAoA
tAWhBQoA0QUiAQoA1gUiAQoA+gWRAw4AJgYQBg4APwYQBgoAVAaQBAAAAAABAAAAAAABAAEAAQAQ
ADkAAAAFAAEAAQABABAARgAAAAkAAQAGAAEAEABUAAAADQADAAoAAQAQAGAAAAANAAQACwABABAA
agAAAAwABQAMAAAAEAB1AH8ADQAGABAAAAEQALUAfwARAAgAFAAGAFQAMwAGAGAANwABACsCTwAB
ACsCTwABADsCWQARAH4CXAARAKsCYAARAO8CfgBQIAAAAACGGJsBEwABAFsgAAAAAIYIoQEdAAQA
aiAAAAAAhgivASIABQCBIAAAAACGAMQBJwAGAIkgAAAAAIYAzAEnAAYAkSAAAAAAhhibATsABgCx
IAAAAADGAPMBPwAGANYgAAAAAMYBAAJJAAoA6SAAAAAAxgEUAkkACwDrIAAAAACGGJsBUwAMAPog
AAAAAIYYmwFTAA0ACSEAAAAAxgBGAjsADgAYIQAAAADGAFECOwAOACAhAAAAAMYAFAJJAA4APCEA
AAAAhhibATsADwBEIQAAAACDGJsBOwAPAEwhAAAAAJMIuwJkAA8AhSEAAAAAkwjPAmkADwCMIQAA
AACTCNsCbgAPAJQhAAAAAJYI/wKCABAApyEAAAAAhhibATsAEACbIQAAAACRGG8G0AAQAAAAAQAT
AwAAAgAaAwAAAwAuAwAAAQA4AwAAAQA4AwAAAQA+AwAAAgBGAwAAAwATAwAABAAuAwAAAQATAwAA
AQBQAwAAAQBUAwAAAQBUAwAAAQBQAwAAAQA4A0kAmwGMAFEAmwGMAFkAmwGMAGEAmwGMAGkAmwGM
AHEAmwGMAHkAmwGMAIEAmwGMAIkAmwGMAJEAmwGMAJkAmwEdAKEAmwE7AAkAmwETAAkAHwWRAAkA
KAUdALEAmwGMAAkAxAEnAAkAzAEnABEAmwE7ALkAYgWXABEAaQWeABkAmwE7AMkAmwE7ABEARgI7
ABEAUQI7ANEAmwE7ANkA6AWpANkAAwawADkAmwG1APEAmwHBAAEBmwE7ACEAmwE7AC4AGwBMAS4A
YwCKAS4AIwBMAS4AKwBSAS4AWwCBAS4AEwAcAS4AMwAcAS4AQwBMAS4ACwDUAC4AOwBhAWkA8wDH
AIkA8wDHAMMAuwCkAOMA0wCkAAEB+wCkALwAAgABAAcAAwAIAAUAAADYASsAAADiAS8AAABuAnQA
AADnAnkAAAALA4cAAQACAAMAAQADAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEAAAAA
EgaQAAAAAAAA7gQAAAsAAAAAAAAAAAAAAAEAvgAAAAAABAAAAAAAAAAAAAAACgAZAQAAAAAEAAAA
AAAAAAAAAAAKACIBAAAAAAsAAAAAAAAAAAAAAAEAXQEAAAAAAAAAAAEAAAB2BgAAAAAAAAA8TW9k
dWxlPgBTQ182ODA5NWJmZGNmM2U0ZjEyODQ4YzY5ZDZlZjMyMzNmZS5jc3Byb2ouZGxsAElucHV0
MEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJl
c291cmNlcwBTQ182ODA5NWJmZGNmM2U0ZjEyODQ4YzY5ZDZlZjMyMzNmZS5jc3Byb2ouUHJvcGVy
dGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXRO
YW1lTWFwAC5jdG9yAHNldF9Sb3dOdW1iZXIAc2V0X1Jvd051bWJlcl9Jc051bGwATmV4dFJvdwBF
bmRPZlJvd3NldABSb3dOdW1iZXIAUm93TnVtYmVyX0lzTnVsbABQcm9jZXNzSW5wdXQASW5wdXQw
X1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AFBhcmVudENvbXBvbmVudAByb3df
bnVtYmVyAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3Vy
Y2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3Vs
dHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVyQ29s
dW1uSW5kZXhlcwBPdXRwdXRNYXAAdmFsdWUASW5wdXRJRABJbnB1dE5hbWUAUm93AENvbXBvbmVu
dABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0
ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFz
c2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAU0NfNjgwOTViZmRjZjNlNGYxMjg0OGM2OWQ2ZWYzMjMzZmUuY3Nwcm9qAEludDMyAHNldF9J
dGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmcAU3RyaW5nQ29tcGFy
aXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9B
c3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ182
ODA5NWJmZGNmM2U0ZjEyODQ4YzY5ZDZlZjMyMzNmZS5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBv
AHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAA
dgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAA
D0kAbgBwAHUAdAAgADAAAH9TAEMAXwA2ADgAMAA5ADUAYgBmAGQAYwBmADMAZQA0AGYAMQAyADgA
NAA4AGMANgA5AGQANgBlAGYAMwAyADMAMwBmAGUALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAADK0JSxiaIoTqGNbDPe/kuhAAiJhF3NgIDM
kQi3elxWGTTgiQkgAwESFR0IEhkEIAEBCAQgAQECAyAAAgMoAAgDKAACAwYSEAMGEhQDIAABCSAE
AQgOEhUSGQUgAQESCAMGEgkFIAEBEgkCBggDBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQI
ABIhAwYSIAQAABIgBAgAEiAEIAEBDgUgAgEIHAYgAgIOEWEFIAEdCAgEAQAAAAYAARJtEXEEIAAS
dQYgAgEOEnUEBwESHQUgAQERfQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU0NfNjgw
OTViZmRjZjNlNGYxMjg0OGM2OWQ2ZWYzMjMzZmUuY3Nwcm9qAAAFAQAAAAAOAQAJTWljcm9zb2Z0
AAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTEAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEAAADUMQAAAAAAAAAAAADuMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAA4DEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIEAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA4BAAAAAAAAAAAAAA4BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEABpAAEgAAAQAGkAASPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEmAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAdAMAAAEAMAAwADAA
MAAwADQAYgAwAAAANAAKAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBv
AGYAdAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA2ADgA
MAA5ADUAYgBmAGQAYwBmADMAZQA0AGYAMQAyADgANAA4AGMANgA5AGQANgBlAGYAMwAyADMAMwBm
AGUALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADQANgAwADgALgAzADYAOAA3ADAAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8ANgA4ADAAOQA1AGIAZgBkAGMAZgAzAGUANABmADEAMgA4ADQAOABjADYAOQBkADYA
ZQBmADMAMgAzADMAZgBlAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAXAAbAAEATABlAGcAYQBs
AEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMA
bwBmAHQAIAAyADAAMQAxAAAAAACIAC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBDAF8ANgA4ADAAOQA1AGIAZgBkAGMAZgAzAGUANABmADEAMgA4ADQAOABjADYAOQBkADYA
ZQBmADMAMgAzADMAZgBlAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1
AGMAdABOAGEAbQBlAAAAAABTAEMAXwA2ADgAMAA5ADUAYgBmAGQAYwBmADMAZQA0AGYAMQAyADgA
NAA4AGMANgA5AGQANgBlAGYAMwAyADMAMwBmAGUALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADYAMAA4AC4AMwA2ADgANwAwAAAA
AABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADYAMAA4
AC4AMwA2ADgANwAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAADIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_68095bfdcf3e4f12848c69d6ef3233fe</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">0814edb0ad89a23f1c7c61df1efff10c</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - RSS Feed\SCR - Number Rows.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DFT - RSS Feed\SCR - Number Rows.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0].Columns[RowNumber]"
                      dataType="i4"
                      lineageId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0].Columns[RowNumber]"
                      name="RowNumber" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - RSS Feed.Paths[Output 01]"
              endId="Package\DFT - RSS Feed\SCR - Number Rows.Inputs[Input 0]"
              name="Output 0"
              startId="Package\DFT - RSS Feed\SCR - Get RSS Feed Data.Outputs[Output 0]" />
            <path
              refId="Package\DFT - RSS Feed.Paths[Output 0]"
              endId="Package\DFT - RSS Feed\CNT - Count Rows.Inputs[Row Count Input 1]"
              name="Output 0"
              startId="Package\DFT - RSS Feed\SCR - Number Rows.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="152,52"
          Id="Package\DFT - RSS Feed"
          TopLeft="220,138" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DFT - RSS Feed">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\SCR - Get RSS Feed Data"
          TopLeft="59.9999999999999,44" />
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\SCR - Number Rows"
          TopLeft="59.9999999999999,143" />
        <NodeLayout
          Size="164,57.6"
          Id="Package\DFT - RSS Feed\CNT - Count Rows"
          TopLeft="59.9999999999999,241" />
        <EdgeLayout
          Id="Package\DFT - RSS Feed.Paths[Output 01]"
          TopLeft="141.928333333333,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - RSS Feed.Paths[Output 0]"
          TopLeft="141.928333333333,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>